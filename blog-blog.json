[{"model": "blog.category", "pk": 1, "fields": {"name": "Android"}}, {"model": "blog.tag", "pk": 1, "fields": {"name": "Android \u9006\u5411"}}, {"model": "blog.tag", "pk": 2, "fields": {"name": "Android \u5b66\u4e60"}}, {"model": "blog.post", "pk": 1, "fields": {"title": "android js bridge \u4e92\u76f8\u8c03\u7528\u7b2c\u4e8c\u7248", "body": "# android-js-bridge-v2\r\n### android js \u4e92\u76f8\u8c03\u7528 \u7b2c\u4e8c\u7248\r\n\r\n##### 1. \u652f\u6301js\u533f\u540d\u51fd\u6570\u63a5\u6536\r\n##### 2. \u652f\u6301js json\u5bf9\u8c61\u63a5\u6536\r\n##### 3. \u652f\u6301js\u51fd\u6570\u8fd4\u56de\u503c\u83b7\u53d6\r\n##### 4. \u901a\u8fc7\u6ce8\u89e3\u6ce8\u5165js\u65b9\u6cd5\r\n##### 5. \u4f18\u5316\u7b2c\u4e00\u7248\u7684\u53cd\u5c04\u6ce8\u5165\u65b9\u5f0f\uff0c\u91c7\u7528\u6ce8\u89e3\u5904\u7406\u5668\u7f16\u8bd1\u65f6\u751f\u6210\u6ce8\u5165\u4ee3\u7801,\u63d0\u9ad8\u8fd0\u884c\u6548\u7387\r\n##### 6. \u52a0\u5165\u7b80\u5355\u7684 webview \u9884\u52a0\u8f7d\u529f\u80fd\r\n\r\n###  [https://github.com/lwugang/android-js-bridge-v2](https://github.com/lwugang/android-js-bridge-v2)\r\n\r\nAdd it in your root build.gradle at the end of repositories:\r\n~~~gradle\r\n\tallprojects {\r\n\t\trepositories {\r\n\t\t\t...\r\n\t\t\tmaven { url 'https://jitpack.io' }\r\n\t\t}\r\n\t}\r\n~~~\r\n\r\nAdd the dependency\r\n~~~gradle\r\n  dependencies {\r\n      implementation 'com.github.lwugang.android-js-bridge-v2:library:v2.0'\r\n\t    implementation 'com.github.lwugang.android-js-bridge-v2:js-bridge-anno:v2.0'\r\n\t    annotationProcessor 'com.github.lwugang.android-js-bridge-v2:js-bridge-compiler:v2.0'\r\n\t}\r\n\r\n~~~\r\n\r\n#### \u4f7f\u7528\u65b9\u5f0f\r\n~~~xml\r\n\t<com.wugang.jsbridge.library.BridgeWebView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:id=\"@+id/web_view\"/>\r\n~~~\r\n### Activity\r\n- \u6ce8\u5165\u7684\u63d2\u4ef6\u5bf9\u8c61\u5fc5\u987b\u5b9e\u73b0JsPlugin\u63a5\u53e3,\u6240\u6709\u9700\u8981\u6ce8\u5165\u7684\u5bf9\u8c61\u5fc5\u987b\u7ee7\u627fJsPlugin\u8fd9\u4e2a\u7c7b\u5e76\u4e14 \u52a0\u4e0a @JsInject \u6ce8\u89e3\u6807\u8bb0\r\n- \u88ab @JsInject \u6807\u8bb0\u7684\u7c7b\u4f1a\u88ab\u81ea\u52a8\u6ce8\u5165\uff0c\u5e76\u8c03\u7528\u7a7a\u53c2\u7684\u6784\u9020\u521b\u5efa\u5bf9\u8c61\uff0c\u5982\u679c\u6709\u81ea\u5b9a\u4e49\u6784\u9020 \u53ef\u4ee5\u4f7f\u7528 ***webView.getJsBridge().register()***\r\n- \u5982\u679c\u8be5\u7c7b\u4e2d\u7684\u65b9\u6cd5\u4e0d\u5e0c\u671b\u88ab\u6ce8\u5165\u53ef\u4ee5 \u4f7f\u7528 @JsInject \u6ce8\u89e3\u4e0a\u7684 filter\u53c2\u6570\u8fc7\u6ee4\u6389\r\n~~~java\r\n    public class MainActivity extends AppCompatActivity {\r\n\r\n       @Override protected void onCreate(Bundle savedInstanceState) {\r\n          super.onCreate(savedInstanceState);\r\n          setContentView(R.layout.activity_main);\r\n          PreLoadManager.get(this).preload(\"http://www.baidu.com\", \"http://www.youku.com\");\r\n          BridgeWebView webView = (BridgeWebView) findViewById(R.id.web_view);\r\n          webView.getJsBridge().register(\"AB\",new AB(this));\r\n          webView.loadUrl(\"file:///android_asset/test.html\");\r\n          WebView.setWebContentsDebuggingEnabled(true);\r\n       }\r\n\r\n      @JsInject public static class AB extends JsPlugin {\r\n          private Context context;\r\n\r\n          public AB() {\r\n          }\r\n\r\n          public AB(Context context) {\r\n            this.context = context;\r\n          }\r\n\r\n          public void test(String s, JSFunction jsFunction) {\r\n            Toast.makeText(context, \"js\u8c03\u7528\u6211\", 1).show();\r\n            jsFunction.execute(\"test execute   \" + s);\r\n          }\r\n\r\n          public void test1() {\r\n            Log.e(\"-------\", \"test1: \");\r\n          }\r\n\r\n          public void test2() {\r\n            Log.e(\"-------\", \"test2: \");\r\n          }\r\n      }\r\n    }\r\n~~~\r\nHTML&JS\u4ee3\u7801\r\n~~~js\r\n<html>\r\n<script>\r\n      // \u63a8\u8350\u4f7f\u7528\u65b9\u5f0f\uff0c\u5426\u5219\u76f4\u63a5\u8c03\u7528\u5c06\u65e0\u6cd5\u8c03\u7528\u5230 \u539f\u751f\u65b9\u6cd5\r\n      window.JSBridgeReady=function(){\r\n          console.log(\"---window EasyJSReady---\")\r\n          AB.test2();\r\n          AB.test(\"call test\",function(ret){\r\n              console.log(ret)\r\n          })\r\n      }\r\n</script>\r\n<script src=\"test.js\"></script>\r\n\r\n<body>\r\n  <button onclick=\"javascript:location.reload()\">refresh</button>\r\n</body>\r\n</html>\r\n~~~\r\n#### \u7f51\u9875\u9884\u52a0\u8f7d\r\n~~~java\r\n   //\u9884\u52a0\u8f7d\uff0c\u63a8\u8350\u5728Application\u4e2d\u8c03\u7528\r\n   PreLoadManager.get(this).preload(\"http://www.baidu.com\", \"http://www.youku.com\");\r\n~~~\r\n###### Activity \u4e2d\u4f7f\u7528\r\n~~~java\r\npublic class PreLoadActivity extends AppCompatActivity {\r\n  @Override protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n    super.onCreate(savedInstanceState);\r\n    BridgeWebView webView = PreLoadManager.get(this).getWebView();\r\n    setContentView(webView);\r\n    webView.setWebViewClient(new WebViewClient(){\r\n      @Override public boolean shouldOverrideUrlLoading(WebView view, WebResourceRequest request) {\r\n        if(request.hasGesture()){\r\n          Intent intent = new Intent(PreLoadActivity.this,PreLoadActivity.class);\r\n          intent.putExtra(\"url\",request.getUrl());\r\n          startActivity(intent);\r\n          return true;\r\n        }\r\n        return super.shouldOverrideUrlLoading(view, request);\r\n      }\r\n    });\r\n    webView.loadUrl(getIntent().getStringExtra(\"url\"));\r\n  }\r\n}\r\n~~~\r\n\r\n[\u53c2\u8003\u9879\u76eehttps://github.com/lwugang/safe-java-js-webview-bridge](https://github.com/lwugang/safe-java-js-webview-bridge)\r\n\r\n[\u53c2\u8003\u9879\u76eehttps://github.com/dukeland/EasyJSWebView](https://github.com/dukeland/EasyJSWebView)\r\n\r\n![android-js-bridge-v2p.gif](https://upload-images.jianshu.io/upload_images/2194180-ce553600ad1c8a1b.gif?imageMogr2/auto-orient/strip)", "created_time": "2019-11-01T11:30:00Z", "modified_time": "2019-11-04T02:21:12.045Z", "excerpt": "android-js-bridge-v2 android js \u4e92\u76f8\u8c03\u7528 \u7b2c\u4e8c\u7248 1. \u652f\u6301js\u533f\u540d\u51fd\u6570\u63a5\u6536 2. \u652f\u6301js json\u5bf9\u8c61\u63a5\u6536 3. \u652f\u6301js\u51fd\u6570\u8fd4\u56de\u503c\u83b7\u53d6 4. \u901a\u8fc7\u6ce8\u89e3\u6ce8\u5165js\u65b9\u6cd5 5. \u4f18\u5316\u7b2c\u4e00\u7248\u7684\u53cd\u5c04\u6ce8\u5165\u65b9\u5f0f\uff0c\u91c7\u7528\u6ce8\u89e3\u5904\u7406\u5668\u7f16\u8bd1\u65f6\u751f\u6210\u6ce8\u5165\u4ee3\u7801,\u63d0", "views": 15, "words": 3166, "category": 1, "author": 1, "status": "p", "stick": "n", "tag": [2]}}, {"model": "blog.post", "pk": 2, "fields": {"title": "ActivityResult \u8ba9\u4f60\u4f18\u96c5\u7684\u83b7\u53d6Activity\u7684\u8fd4\u56de\u503c", "body": "### github\u00a0 \u00a0[https://github.com/lwugang/ActivityResult](https://github.com/lwugang/ActivityResult)\r\n```gradle\r\nallprojects {\r\n\trepositories {\r\n\t\tmaven { url 'https://www.jitpack.io' }\r\n\t}\r\n}\r\ndependencies {\r\n\tcompile 'com.github.lwugang:ActivityResult:ef8a6afcaf'\r\n}\r\n```\r\n## \u5927\u5bb6\u90fd\u77e5\u9053\u5728\u4e00\u4e2aAPP\u4e2d\uff0cActivity\u4e4b\u95f4\u7684\u6570\u636e\u4ea4\u4e92\u662f\u7ecf\u5e38\u7684\uff0c\r\n####\u4f20\u7edf\u65b9\u5f0f\u83b7\u53d6Activity\u8fd4\u56de\u503c,\u8fd9\u79cd\u65b9\u5f0f\u9700\u8981\u64cd\u4f5c\u591a\u4e2a\u65b9\u6cd5\uff0c\u53ef\u8bfb\u6027\u5f88\u5dee\r\n```java\r\n startActivityForResult(new Intent(),1);\r\n```\r\n```java\r\n@Override protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n    super.onActivityResult(requestCode, resultCode, data);\r\n    //\u83b7\u53d6\u6570\u636e\r\n  }\r\n```\r\n####ActivityResult\u65b9\u5f0f \u53ea\u9700\u5173\u6ce8\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5b9e\u73b0\u65b9\u6cd5\u7684\u94fe\u5f0f\u8c03\u7528\uff0c\u53ef\u8bfb\u6027\u5f3a\uff0c\u5bf9\u4ee3\u7801\u65e0\u4fb5\u5165\uff0c\u53ea\u9700\u4fee\u6539\u6253\u5f00\u65b9\u5f0f\uff0c\u53e6\u4e00\u4e2a\u754c\u9762\u7684\u903b\u8f91\u65e0\u9700\u7279\u6b8a\u5904\u7406\r\n```java\r\nActivityResult.of(this)\r\n        .className(TestActivity.class)//\u76ee\u6807Activity\u7c7b\u540d\r\n        //\u7eff\u8272\u901a\u9053\uff0c\u4e0d\u8d70\u4efb\u4f55\u62e6\u622a\u5668\uff0c\u76f4\u63a5\u6253\u5f00\u76ee\u6807\r\n        .greenChannel()\r\n        //transition \u52a8\u753b\r\n        .options(ActivityOptionsCompat.makeScaleUpAnimation(v,(int)v.getX(),(int)v.getY(),\r\n            v.getWidth()/2,v.getHeight()/2).toBundle())\r\n        //\u62e6\u622a\u5668\uff0c\u5728startActivity\u4e4b\u524d\u6267\u884c\r\n        .intercept(new Intercept() {\r\n          @Override public boolean onIntercept(Activity activity, ActivityResult activityResult) {\r\n            Log.e(TAG, \"onIntercept: test\" );\r\n            //\u62e6\u622a\u5668\uff0creturn true \u8868\u793a\u62e6\u622a\uff0c\u4e4b\u540e\u7684\u62e6\u622a\u5668\u90fd\u4e0d\u4f1a\u6267\u884c\r\n            //activityResult.onContinue(); \u7ee7\u7eed\u6267\u884c\u4e4b\u540e\u7684\u903b\u8f91\r\n            return false;\r\n          }\r\n        }).forResult(new ActivityResultListener() {\r\n      @Override public void onReceiveResult(int resultCode, Intent data) {\r\n          // \u7ed3\u679c\u5904\u7406\uff0c\u4e5f\u5c31\u662fonActivityResult\u65b9\u6cd5\u4e00\u6837\r\n      }\r\n    });\r\n```\r\n####Application \u4e2d\u63d0\u524d\u52a0\u5165\u62e6\u622a\u5668(\u53ef\u9009)\r\n```java\r\n//\u6ce8\u518c\u62e6\u622a\u5668\r\nActivityResultManager.get()\r\n        .registerIntercept(new Intercept() {\r\n          @Override public boolean onIntercept(Activity activity,final ActivityResult activityResult) {\r\n            Log.e(TAG, \"onIntercept: \" );\r\n            new Thread(){\r\n              @Override public void run() {\r\n                super.run();\r\n                SystemClock.sleep(2000);\r\n                activityResult.onContinue();\r\n              }\r\n            }.start();\r\n            return true;\r\n          }\r\n        // true \u8868\u793a\u4f7f\u7528\u4e00\u6b21\u4e4b\u540e\u5c31\u81ea\u52a8\u79fb\u9664\uff0c\u4e0b\u4e00\u6b21\u4e0d\u4f1a\u5728\u6267\u884c\u6b64\u62e6\u622a\u5668\r\n        },true).registerIntercept(new Intercept() {\r\n      @Override public boolean onIntercept(Activity activity, ActivityResult activityResult) {\r\n        //\u53ef\u4ee5\u5224\u65ad\u662f\u5426\u767b\u5f55\u6210\u529f\uff0c\u8fd4\u56de\u5bf9\u5e94\u7684\u503c\r\n        Log.e(TAG, \"onIntercept2222222222: \" );\r\n        return false;\r\n      }\r\n    },true);\r\n```\r\n###\u5b9e\u73b0\u5206\u6790\r\n\u53c2\u8003 RxPermissions \u7684\u5b9e\u73b0\u65b9\u5f0f\r\nActivity\u7684\u7ed3\u679c\u83b7\u53d6\u603b\u662f\u79bb\u4e0d\u5f00\u7cfb\u7edf\u7684\u65b9\u5f0f\u7684\uff0cActivityResult\u53ea\u662f\u5bf9\u7cfb\u7edf\u7684\u65b9\u5f0f\u8fdb\u884c\u4e86\u4e00\u5c42\u5305\u88c5\uff0c\u901a\u8fc7\u4f7f\u7528Fragment\u6765\u4ee3\u7406\uff0c\u5728fragment\u7684 startActivityForResult\u65b9\u6cd5\u6765\u5b9e\u73b0Activity\u7684\u8df3\u8f6c\uff0c\u5728fragment\u4e2d\u7684onActivityResult\u65b9\u6cd5\uff0c\u6765\u56de\u8c03\u6211\u4eec\u7684\u63a5\u53e3\r\n###ActivityResult.java \u6838\u5fc3\u903b\u8f91\r\n```java\r\n /**\r\n   * \u901a\u8fc7TAG\u67e5\u627eActivityResultFragment\r\n   */\r\n  Fragment findActivityResultFragment(Activity activity) {\r\n    return activity.getFragmentManager().findFragmentByTag(TAG_ACTIVITY_RESULT_FRAGMENT);\r\n  }\r\n\r\n  private ActivityResultFragment getActivityResultFragment(Activity activity) {\r\n    Fragment activityResultFragment = findActivityResultFragment(activity);\r\n  //\u7b49\u4e8enull\u8868\u793a\uff0c\u6211\u4eec\u6ca1\u6709\u5728\u5f53\u524dActivity\u52a0\u5165fragment\uff0c\r\n    if (activityResultFragment == null) {\r\n      //\u521b\u5efa\u4e00\u4e2aActivityResultFragment\u5bf9\u8c61\uff0c\u901a\u8fc7FragmentManager#add\u65b9\u6cd5\u6dfb\u52a0\u5230\u5f53\u524dActivity\u4e2d\r\n      FragmentManager fragmentManager = activity.getFragmentManager();\r\n      activityResultFragment = new ActivityResultFragment();\r\n      fragmentManager.beginTransaction()\r\n          .add(activityResultFragment, TAG_ACTIVITY_RESULT_FRAGMENT)\r\n          .commitAllowingStateLoss();\r\n      fragmentManager.executePendingTransactions();\r\n    }\r\n    return (ActivityResultFragment) activityResultFragment;\r\n  }\r\n/**\r\n   * \u4ee5\u8fd4\u56de\u503c\u65b9\u5f0f\u6253\u5f00\u5bf9\u5e94\u7684\u754c\u9762\r\n   * @param activityResultListener \u53ef\u4ee5\u4e3a null,null\u8868\u793a\u4e0d\u9700\u8981\u5904\u7406\u8fd4\u56de\u503c\r\n   */\r\n  public void forResult(@Nullable ActivityResultListener activityResultListener) {\r\n    //\u7ed9fragment\u8bbe\u7f6e\u6211\u4eec\u7684\u56de\u8c03\u76d1\u542c\r\n    resultFragment.setActivityResultListener(activityResultListener);\r\n  //\u7eff\u8272\u901a\u9053\u4e0d\u8d70\u62e6\u622a\u5668\r\n    if (!greenChannel) {\r\n      execIntercepts();\r\n    } else {\r\n      startActivity();\r\n    }\r\n  }\r\n```\r\n###ActivityResultFragment.java\r\n```java\r\n/**\r\n * @author lwg\r\n * @e-mail 13480020053@163.com\r\n * @time 1/4/18\r\n * @desc activity \u7ed3\u679c\u4ee3\u7406fragment\r\n */\r\n\r\npublic class ActivityResultFragment extends Fragment {\r\n\r\n  private ActivityResultListener activityResultListener;\r\n\r\n  public ActivityResultFragment() {\r\n  }\r\n\r\n  public void setActivityResultListener(ActivityResultListener activityResultListener) {\r\n    this.activityResultListener = activityResultListener;\r\n  }\r\n\r\n  @Override public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n    super.onActivityResult(requestCode, resultCode, data);\r\n    //\u56de\u8c03\u6211\u4eec\u7684\u7ed3\u679c\u76d1\u542c\r\n    if(activityResultListener!=null)\r\n      activityResultListener.onReceiveResult(resultCode, data);\r\n  }\r\n}\r\n```", "created_time": "2019-11-04T02:15:00Z", "modified_time": "2019-11-04T02:21:05.803Z", "excerpt": "github\u00a0 \u00a0[https://github.com/lwugang/ActivityResult](https://github.com/lwugang/ActivityResult)```gradleallprojects {\trepositories {\t\tmaven {", "views": 201, "words": 3851, "category": 1, "author": 1, "status": "p", "stick": "n", "tag": [2]}}, {"model": "blog.post", "pk": 3, "fields": {"title": "Android\u9006\u5411\u4fee\u6539smali-\u624b\u673a\u4e0a\u73ed\u6253\u5361\u7834\u89e3", "body": "## \u672c\u7bc7\u6587\u7ae0\u4f1a\u901a\u8fc7\u4e00\u4e2a\u6848\u4f8b\u5bf9\u9006\u5411\u7834\u89e3\u7684\u6d41\u7a0b\u8fdb\u884c\u8be6\u7ec6\u7684\u89e3\u8bf4\r\n1. \u901a\u8fc7\u672c\u7bc7\u6587\u7ae0\u4f60\u4f1a\u77e5\u9053\u9006\u5411\u7684\u4e00\u4e2a\u7b80\u5355\u6d41\u7a0b\r\n2. \u5b66\u4f1a\u7b80\u5355\u7684\u9006\u5411\u5f00\u53d1\r\n\r\n#### \u4e0b\u9762\u662f\u516c\u53f8\u5185\u90e8\u7684\u4e00\u4e2a\u6253\u5361\u7cfb\u7edf\uff0csmali\u4fee\u6539\u7684\u6709\u4e24\u4e2a\u5730\u65b9\r\n1. \u6253\u5361\u7684\u4f4d\u7f6e\u4fe1\u606f\r\n2. \u53f3\u4e0a\u89d2\u7684\u9a8c\u8bc1\u6309\u94ae\uff0c\u516c\u53f8\u7684\u6253\u5361\u7cfb\u7edf\u903b\u8f91\u662f  \u7528\u624b\u673a\u6253\u5361\u4e4b\u540e\u5fc5\u987b\u4f7f\u7528 web \u7aef\u6216\u8005\u7535\u8111\u7aef\u767b\u5f55\u8fdb\u884c\u9a8c\u8bc1\uff0c\u6240\u4ee5\u901a\u8fc7smali\u65b0\u589e\u4e86\u4e00\u4e2a\u754c\u9762\u8fdb\u884cweb\u7aef\u9a8c\u8bc1\r\n![\u9006\u5411.gif](https://upload-images.jianshu.io/upload_images/2194180-bd401b8164f93553.gif?imageMogr2/auto-orient/strip)\r\n\r\n\r\n\r\n### \u8bf4\u5230Android\u7684\u9006\u5411\u5fc5\u987b\u8981\u4e86\u89e3\u7684\u4e00\u4e2a\u77e5\u8bc6\u5c31\u662f  smali\r\n##### \u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u63d0\u53d6java\u4ee3\u7801\u4fee\u6539\uff1f\r\n1. \u56e0\u4e3aapk\u53cd\u7f16\u8bd1\u6210java\u4ee3\u7801\u540e\u662f\u4e0d\u5b8c\u6574\u7684\u4e0d\u80fd\u76f4\u63a5\u8fd0\u884c\uff0c\u539f\u56e0\u4e0a\u9762\u4e5f\u8bf4\u8fc7\uff0c\u5c31\u662fandroid\u4f1a\u628aclass\u6253\u5305\u6210 dex\u6587\u4ef6\u5e76\u5bf9\u4ee3\u7801\u8fdb\u884c\u4f18\u5316\uff0c\u6240\u4ee5\u662f\u65e0\u6cd5\u8fd8\u539f\u6210java\u4ee3\u7801\u7684\r\n\r\n##### \u4ec0\u4e48\u662fsmali ?\r\n- Android\u7a0b\u5e8f\u7528Java\u8bed\u8a00\u5f00\u53d1APP\uff0c\u7f16\u8bd1\u5de5\u5177\u4f1a\u5c06Java\u6e90\u6587\u4ef6\uff08.java\uff09\u7f16\u8bd1\u6210Dalvik\u53ef\u6267\u884c\u6587\u4ef6\uff08.dex\uff09\u3002Android\u7cfb\u7edf\u4e2dDalvik Virtual Machine \u4f1a\u6267\u884c\u8be5\u6587\u4ef6\u3002smali/baksmali\u5219\u662fDalvik VM\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6c47\u7f16\u5668/\u53cd\u6c47\u7f16\u5668\u3002\u53cd\u6c47\u7f16Dalvik\u53ef\u6267\u884c\u6587\u4ef6\uff08.dex\uff09\u540e\uff0c\u5c06\u4f1a\u5f97\u5230.smali\u540e\u7f00\u6587\u4ef6\u3002smali\u4ee3\u7801\u62e5\u6709\u7279\u5b9a\u7684\u8bed\u6cd5\u3002\u76f8\u6bd4\u4e8e.dex\u6587\u4ef6\uff0csmali\u6587\u4ef6\u7684\u8bed\u6cd5\u66f4\u5bb9\u6613\u7406\u89e3\u4e9b\u3002\r\n\r\n- .dex\u6587\u4ef6\u548c.smali\u6587\u4ef6\u53ef\u4ee5\u901a\u8fc7smali/baksmali\u5de5\u5177\u8fdb\u884c\u76f8\u4e92\u8f6c\u6362\u3002\u800c.smali\u6587\u4ef6\u65e0\u6cd5\u5b8c\u6574\u8f6c\u5316\u6210.java\u6587\u4ef6\uff0c\u53ef\u80fd\u662f\u7531\u4e8eAndroid SDK \u4e2ddx\u5de5\u5177\u5c06.java\u6587\u4ef6\u7684\u5b57\u8282\u7801.class\u6587\u4ef6\u8f6c\u6362\u6210.dex\u6587\u4ef6\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8fdb\u884c\u4e86\u91cd\u65b0\u6392\u5217\uff0c\u53bb\u9664\u4e86\u591a\u4f59\u7684\u4fe1\u606f\uff0c\u867d\u7136\u63d0\u9ad8\u4e86.dex\u6587\u4ef6\u7684\u6267\u884c\u6548\u7387\uff0c\u5374\u4e5f\u4e22\u5931\u4e86\u4fe1\u606f\uff0c\u65e0\u6cd5\u5b8c\u5168\u8f6c\u5316\u56de\u53bb\u3002\r\n![image](http://upload-images.jianshu.io/upload_images/2194180-724f903241720b6f?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\r\n\r\n### \u8bf4\u4e86\u90a3\u4e48\u591a\u73b0\u5728\u5f00\u59cb\u6848\u4f8b\u7684\u8bb2\u89e3\r\n\r\n- #### \u9996\u5148\u786e\u5b9a\u8981\u9006\u5411\u7684APP,\u901a\u8fc7[ApkTool](https://ibotpeaches.github.io/Apktool/)\u53cd\u7f16\u8bd1apk\r\n\r\n\t```bash\r\n\t\t //apktool\u662f\u4e00\u4e2ajar\u6587\u4ef6\u6240\u4ee5\u901a\u8fc7java\u8fd0\u884cjar\u7684\u65b9\u5f0f \r\n\t\t  java -jar apktool.jar d com.sejian.apk\r\n\t```\r\n\t[![image](http://upload-images.jianshu.io/upload_images/2194180-80e90fa2018044fa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)](http://blog.liwg.top/wp-content/uploads/2018/04/QQ\u622a\u56fe20180426150103.png)\r\n\r\n\t###### \u53cd\u7f16\u8bd1\u5b8c\u6210\u4e4b\u540e\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u751f\u6210\u4e00\u4e2a\u4ee5\u5f53\u524dapk\u540d\u5b57\u7684\u6587\u4ef6\u5939,\u6587\u4ef6\u5939\u5185\u5bb9\u7ed3\u6784\u5982\u4e0b(\u5982\u679c\u6ca1\u6709\u5bf9\u5e94\u7684\u5185\u5bb9\uff0c\u6216\u8005\u6587\u4ef6\u4e2d\u7684\u5185\u5bb9\u4e3a\u7a7a\uff0c\u8868\u793a\u53cd\u7f16\u8bd1\u5931\u8d25\uff0capktool\u4e0d\u652f\u6301)\r\n\t![image](http://upload-images.jianshu.io/upload_images/2194180-1ace23c27d20fbc4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\r\n\t###### smali \u4ee3\u7801\u662f\u83b7\u53d6\u5230\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u4e5f\u770b\u4e0d\u61c2smali\u554a\uff0c\u4e5f\u4e0d\u597d\u770b\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u501f\u7528\u4e00\u4e2a\u5de5\u5177dex2jar \u7528\u6765\u63d0\u53d6apk\u4e2djava\u4ee3\u7801,\u6211\u4eec\u4fee\u6539smali\u5c31\u901a\u8fc7\u5206\u6790java\u4ee3\u7801\u5b9a\u4f4d\u4ee3\u7801\u4f4d\u7f6e\r\n\r\n\t```bash\r\n\t/d2j-dex2jar.sh ../aa.apk\r\n\t```\r\n\r\n- #### \u5f00\u59cb\u5206\u6790\u4ee3\u7801\u627e\u5230\u4fee\u6539smali\u7684\u4f4d\u7f6e\r\n\r\n 1\u3001 \u9996\u5148\u7528\u624b\u673a\u6253\u5f00 \u8003\u52e4\u6253\u5361\u7684\u754c\u9762,\u7136\u540e\u4f7f\u7528 android adb \u5de5\u5177\u67e5\u770b\u5f53\u524d\u7684Activity\u4fe1\u606f\u5b9a\u4f4d\u5230\u5177\u4f53\u7684\u7c7b\r\n\r\n\t```bash\r\n\t# \u5217\u51fa\u6240\u6709\u7684activity\u4fe1\u606f\uff0c\u8fd9\u6837\u4f1a\u51fa\u73b0\u5f53\u524d\u624b\u673a\u6240\u6709\u7684\u4efb\u52a1\u6808\u4fe1\u606f\uff0c\r\n\t# \u592a\u591a\u4e0d\u597d\u5b9a\u4f4d,\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u5b9a\u4f4d\u5230\u5177\u4f53\u7684 activity\r\n\tadb shell dumpsys activity activities\r\n\tadb shell dumpsys activity activities | grep mFocusedActivity\r\n\t```\r\n![image](http://upload-images.jianshu.io/upload_images/2194180-80c4af2065312f85.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\r\n \u901a\u8fc7adb\u64cd\u4f5c\u6211\u4eec\u5b9a\u4f4d\u5230\u4e86com.hhly.RTX/.activity.PunchCardActivity  \u8fd9\u4e2aActivity\uff0c\u73b0\u5728\u6211\u4eec\u5c31\u53ef\u4ee5\u6253\u5f00\u524d\u9762\u63d0\u53d6\u7684java\u4ee3\u7801\u8fdb\u884c\u5206\u6790\u4e86,\u56e0\u4e3a\u6211\u4eec\u63d0\u53d6\u7684\u662fclass\u6587\u4ef6\u6240\u4ee5\u6211\u4eec\u8fd8\u9700\u501f\u52a9\u4e00\u4e2a\u5de5\u5177 jd-gui\u6765\u5206\u6790java\u4ee3\u7801\r\n\r\n```bash\r\n java -jar jd-gui-1.4.0.jar\r\n```\r\n![image](http://upload-images.jianshu.io/upload_images/2194180-8ad8cc37b12ca4d1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\r\n**(jd-gui\u4ee3\u7801\u7684\u641c\u7d22\u529f\u80fd\u4e0d\u600e\u4e48\u597d\u7528\u6211\u4eec\u53ef\u4ee5\u4fdd\u5b58\u5230\u672c\u5730\u901a\u8fc7\u5176\u4ed6\u7f16\u8f91\u5668\u8fdb\u884c\u641c\u7d22)**\r\n\u4ee3\u7801\u662f\u627e\u5230\u4e86\uff0c\u6211\u4eec\u600e\u4e48\u53bb\u627e\u8fd9\u4e2a\u6309\u94ae\u5462\uff1f\u53ef\u4ee5\u901a\u8fc7\u641c\u7d22 \u5173\u952e\u5b50\uff0csubmit request \u4e4b\u7c7b\u7684\u64cd\u4f5c\uff0c\u4f46\u662f\u8fd9\u6837\u4e0d\u597d\u5b9a\u4f4d\uff0c \u6211\u4eec\u53ef\u4ee5 \u6253\u5f00\u4e4b\u524d\u7528apktool\u53cd\u7f16\u8bd1\u4e4b\u540e\u7684\u76ee\u5f55\u91cc\u9762\u6709\u4e00\u4e2ares\u6587\u4ef6\u5939\uff0c\u627e\u5230\u5bf9\u5e94\u7684\u5e03\u5c40\u6587\u4ef6\uff0c\u5b9a\u4f4d\u5230\u6309\u94ae\u7684id\r\n```java\r\n// \u901a\u8fc7\u4e00\u7cfb\u5217\u7684\u67e5\u627e\u6211\u4eec\u627e\u5230\u4e86 \u6309\u94ae\u7684\u70b9\u51fb\u4e8b\u4ef6\r\nthis.btn_repunch.setOnClickListener(new View.OnClickListener(){\r\n\tpublic void onClick(View paramAnonymousView){\r\n\t  new CustomDialog.Builder(paramAnonymousView.getContext()).setMessage(\"\u518d\u6b21\u6253\u5361\u5c06\u91cd\u65b0\u8ba1\u7b97\u6253\u5361\u65f6\u95f4\u54e6~\").setNegativeButton(PunchCardActivity.this.getString(2131231000),0,new DialogInterface.OnClickListener(){\r\n\t\tpublic void onClick(DialogInterface paramAnonymous2DialogInterface,int paramAnonymous2Int){\r\n\t\t  paramAnonymous2DialogInterface.dismiss();\r\n\t\t}\r\n\t  }).setPositiveButton(PunchCardActivity.this.getString(2131230933),0,\r\n\tnew DialogInterface.OnClickListener(){\r\n\t  public void onClick(DialogInterface paramAnonymous2DialogInterface,int paramAnonymous2Int){\r\n\t\tparamAnonymous2DialogInterface.dismiss();\r\n\t\tparamAnonymous2DialogInterface=new HashMap();\r\n\t\tparamAnonymous2DialogInterface.put(\"Check_Type\",\"Check_Again\");\r\n\t\tMobclickAgent.onEvent(PunchCardActivity.this,\"Check_Type\",paramAnonymous2DialogInterface);\r\n\t\t// \u68c0\u67e5\u4f4d\u7f6e\u4fe1\u606f\u5e76\u63d0\u4ea4\u6253\u5361\u8bb0\u5f55\r\n\t\tPunchCardActivity.this.checkLocationInfoAndSubmitPunch();\r\n\t  }\r\n\t}).create().show();\r\n\t}\r\n});\r\n```\r\n\r\n```java\r\nprivate void checkLocationInfoAndSubmitPunch(){\r\n    LatLng localLatLng = this.currentPt;\r\n    String str = this.currentPoiAddr;\r\n    if ((localLatLng != null) && (TextUtils.isEmpty(str)))\r\n    {\r\n      getPOIInfo(localLatLng);\r\n      return;\r\n    }\r\n\t// \u63d0\u4ea4\u6253\u5361\u8bb0\u5f55\r\n    requestSubmitPunch(localLatLng, str);\r\n  }\r\n```\r\n```java\r\nprivate void requestSubmitPunch(LatLng paramLatLng, String paramString){\r\n    String str1 = SpTools.getString(getApplication(), \"token2\", \"\");\r\n    String str2 = SpTools.getString(\"userId2\");\r\n    String str3 = getMacAddress(this);\r\n    String str4 = getImei(this);\r\n    String str5 = UniversalID.getUniversalID(this);\r\n   \r\n      try\r\n      {\r\n        LatLng localLatLng = new LatLng(Double.valueOf(localConfig.getLatitude()).doubleValue(), Double.valueOf(localConfig.getLongitude()).doubleValue());\r\n        d3 = d1;\r\n        localObject4 = localObject1;\r\n\t\t// \u5224\u65ad\u662f\u5426\u5728\u89c4\u5b9a\u7684\u8303\u56f4\u5185\u6253\u5361\r\n        boolean bool = SpatialRelationUtil.isCircleContainsPoint(localLatLng, localConfig.getAttendRange(), paramLatLng);\r\n        d2 = d1;\r\n        localObject3 = localObject1;\r\n        if (bool)\r\n        {\r\n          d3 = d1;\r\n          localObject4 = localObject1;\r\n          d4 = DistanceUtil.getDistance(localLatLng, paramLatLng);\r\n          if (d1 == 0.0D) {\r\n            break label565;\r\n          }\r\n          d2 = d1;\r\n          localObject3 = localObject1;\r\n          if (d4 < d1) {\r\n            break label565;\r\n          }\r\n        }\r\n      }\r\n      catch (Exception localException)\r\n      {\r\n      }\r\n\t  // \u5c01\u88c5\u4e00\u7cfb\u5217\u7684\u53c2\u6570\r\n      ShowToast.mloading(this, false, getString(2131230742), getResources().getColor(2131689566));\r\n      localObject3 = new JSONObject();\r\n      ((JSONObject)localObject3).put(\"userId\", str2);\r\n      ((JSONObject)localObject3).put(\"configId\", Long.valueOf(((PunchConfig.Config)localObject2).getConfigId()));\r\n      ((JSONObject)localObject3).put(\"address\", paramString);\r\n      ((JSONObject)localObject3).put(\"longitude\", String.valueOf(paramLatLng.longitude));\r\n      ((JSONObject)localObject3).put(\"latitude\", String.valueOf(paramLatLng.latitude));\r\n      ((JSONObject)localObject3).put(\"os\", Integer.valueOf(\"3\"));\r\n      ((JSONObject)localObject3).put(\"mac\", str3);\r\n      ((JSONObject)localObject3).put(\"imei\", str4);\r\n      ((JSONObject)localObject3).put(\"code\", str5);\r\n      // ......\u7701\u7565\u53d1\u8d77\u7f51\u7edc\u8bf7\u6c42\r\n  }\r\n```\r\n\r\n\u6211\u4eec\u901a\u8fc7\u5206\u6790\u4ee3\u7801\u53d1\u73b0\u6709\u6548\u8ddd\u79bb\u7684\u5224\u65ad\u662f\u8fd9\u53e5\u4ee3\u7801\r\n```java\r\nboolean bool = SpatialRelationUtil.isCircleContainsPoint(localLatLng, localConfig.getAttendRange(), paramLatLng);\r\n```\r\n\u627e\u5230\u4ee3\u7801\u4e4b\u540e\u5c31\u597d\u4fee\u6539\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5 \u4fee\u6539localLatLng\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u628a\u5b83\u56fa\u5b9a\u4e3a\u4e00\u4e2a\u516c\u53f8\u6709\u6548\u8303\u56f4\u5185\u7684\u503c\u3002  \u6211\u5728\u5904\u7406\u7684\u65f6\u5019\u5e76\u4e0d\u662f\u4fee\u6539\u7684\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u6211\u901a\u8fc7\u5206\u6790\u4ee3\u7801\u53d1\u73b0\u5b9a\u4f4d\u7528\u7684\u662f\u767e\u5ea6\u5b9a\u4f4d\uff0c\u5e76\u4e14\u5c01\u88c5\u4e86\u4e00\u4e2a\u5b9a\u4f4d\u5de5\u5177\u7c7b\uff0c\u5185\u90e8\u5c01\u88c5\u4e86\u4e00\u4e2a  LocationInfo  \u770b\u540d\u5b57\u6211\u4eec\u5c31\u77e5\u9053\u8fd9\u4e2a\u662f\u4e00\u4e2a\u5b9a\u4f4d\u4fe1\u606fjavabean\uff0c \u6211\u4eec\u901a\u8fc7\u4ee3\u7801\u53ef\u4ee5\u77e5\u9053\u5b9a\u4f4d\u6210\u529f\u4e4b\u540e\u4f1a\u628a\u5b9a\u4f4d\u4fe1\u606f\u5305\u88c5\u6210\u4e00\u4e2a LocationInfo\u8fd4\u56de\u7ed9\u8c03\u7528\u8005,\r\n\u8fd9\u91cc\u5c31\u6709\u4e24\u4e2a\u4fee\u6539\u70b9   \r\n\t- onReceiveLocation \u4e2d LocationInfo\u8d4b\u503c\u7684\u65f6\u5019\r\n\t-  LocationInfo \u7684get set\u65b9\u6cd5\u4e2d\r\n\r\n\u6211\u8fd9\u91cc\u4fee\u6539\u7684\u662f get\u65b9\u6cd5\u4e2d,\u81f3\u4e8e\u6211\u4e3a\u4ec0\u4e48\u4fee\u6539\u7684\u662f\u8fd9\uff0c\u4e0b\u9762\u8bb2\uff01\uff01\uff01\uff01\r\n```java\r\n\tpublic class BaiduSdkHelper {\r\n\t  private static BaiduSdkHelper mInstance = new BaiduSdkHelper();\r\n\t  private LocationListener locationListener;\r\n\t  private LocationService locationService;\r\n\t  private BDLocationListener mListener = new BDLocationListener() {\r\n\t\tpublic void onConnectHotSpotMessage(String paramAnonymousString, int paramAnonymousInt) {\r\n\t\t}\r\n\r\n\t\tpublic void onReceiveLocation(BDLocation paramAnonymousBDLocation) {\r\n\t\t  if (BaiduSdkHelper.this.locationListener != null) {\r\n\t\t\tBaiduSdkHelper.LocationInfo localLocationInfo = new BaiduSdkHelper.LocationInfo();\r\n\t\t\tlocalLocationInfo.setAddr(paramAnonymousBDLocation.getAddrStr());\r\n\t\t\tlocalLocationInfo.setCity(paramAnonymousBDLocation.getCity());\r\n\t\t\tlocalLocationInfo.setCountry(paramAnonymousBDLocation.getCountry());\r\n\t\t\tlocalLocationInfo.setDistrict(paramAnonymousBDLocation.getDistrict());\r\n\t\t\tlocalLocationInfo.setStreet(paramAnonymousBDLocation.getStreet());\r\n\t\t\tlocalLocationInfo.setLatitude(paramAnonymousBDLocation.getLatitude());\r\n\t\t\tlocalLocationInfo.setLongitude(paramAnonymousBDLocation.getLongitude());\r\n\t\t\tBaiduSdkHelper.this.locationListener.onReceiveLocation(bool1, localLocationInfo);\r\n\t\t  }\r\n\t\t}\r\n\t  };\r\n\r\n\t  public static BaiduSdkHelper get() {\r\n\t\treturn mInstance;\r\n\t  }\r\n\r\n\t  public void registerListener(LocationListener paramLocationListener) {\r\n\t\tif (this.locationService != null) {\r\n\t\t  this.locationService.registerListener(this.mListener);\r\n\t\t}\r\n\t\tthis.locationListener = paramLocationListener;\r\n\t  }\r\n\r\n\t  public void startLocation() {\r\n\t\tif (this.locationService != null) {\r\n\t\t  this.locationService.start();\r\n\t\t}\r\n\t  }\r\n\r\n\t  public void stopLocation() {\r\n\t\tif (this.locationService != null) {\r\n\t\t  this.locationService.stop();\r\n\t\t}\r\n\t  }\r\n\r\n\t  public void unregisterListener() {\r\n\t\tif (this.locationService != null) {\r\n\t\t  this.locationService.unregisterListener(this.mListener);\r\n\t\t}\r\n\t\tthis.locationListener = null;\r\n\t  }\r\n\r\n\t  public static final class LocationInfo implements Serializable {\r\n\t\tprivate String addr;\r\n\t\tprivate String city;\r\n\t\tprivate String country;\r\n\t\tprivate String district;\r\n\t\tprivate double latitude;\r\n\t\tprivate double longitude;\r\n\t\tprivate String street;\r\n\r\n\t\tpublic String getAddr() {\r\n\t\t  return this.addr;\r\n\t\t}\r\n\r\n\t\tpublic String getCity() {\r\n\t\t  return this.city;\r\n\t\t}\r\n\r\n\t\tpublic String getCountry() {\r\n\t\t  return this.country;\r\n\t\t}\r\n\r\n\t\tpublic String getDistrict() {\r\n\t\t  return this.district;\r\n\t\t}\r\n\r\n\t\tpublic double getLatitude() {\r\n\t\t  return this.latitude;\r\n\t\t}\r\n\r\n\t\tpublic double getLongitude() {\r\n\t\t  return this.longitude;\r\n\t\t}\r\n\r\n\t\tpublic String getStreet() {\r\n\t\t  return this.street;\r\n\t\t}\r\n\tpublic class BaiduSdkHelper {\r\n\t  private static BaiduSdkHelper mInstance = new BaiduSdkHelper();\r\n\t  private LocationListener locationListener;\r\n\t  private LocationService locationService;\r\n\t  private BDLocationListener mListener = new BDLocationListener() {\r\n\t\tpublic void onConnectHotSpotMessage(String paramAnonymousString, int paramAnonymousInt) {\r\n\t\t}\r\n\r\n\t\tpublic void onReceiveLocation(BDLocation paramAnonymousBDLocation) {\r\n\t\t  if (BaiduSdkHelper.this.locationListener != null) {\r\n\t\t\tBaiduSdkHelper.LocationInfo localLocationInfo = new BaiduSdkHelper.LocationInfo();\r\n\t\t\tlocalLocationInfo.setAddr(paramAnonymousBDLocation.getAddrStr());\r\n\t\t\tlocalLocationInfo.setCity(paramAnonymousBDLocation.getCity());\r\n\t\t\tlocalLocationInfo.setCountry(paramAnonymousBDLocation.getCountry());\r\n\t\t\tlocalLocationInfo.setDistrict(paramAnonymousBDLocation.getDistrict());\r\n\t\t\tlocalLocationInfo.setStreet(paramAnonymousBDLocation.getStreet());\r\n\t\t\tlocalLocationInfo.setLatitude(paramAnonymousBDLocation.getLatitude());\r\n\t\t\tlocalLocationInfo.setLongitude(paramAnonymousBDLocation.getLongitude());\r\n\t\t\tBaiduSdkHelper.this.locationListener.onReceiveLocation(bool1, localLocationInfo);\r\n\t\t  }\r\n\t\t}\r\n\t  };\r\n\r\n\t  public static BaiduSdkHelper get() {\r\n\t\treturn mInstance;\r\n\t  }\r\n\r\n\t  public void registerListener(LocationListener paramLocationListener) {\r\n\t\tif (this.locationService != null) {\r\n\t\t  this.locationService.registerListener(this.mListener);\r\n\t\t}\r\n\t\tthis.locationListener = paramLocationListener;\r\n\t  }\r\n\r\n\t  public void startLocation() {\r\n\t\tif (this.locationService != null) {\r\n\t\t  this.locationService.start();\r\n\t\t}\r\n\t  }\r\n\r\n\t  public void stopLocation() {\r\n\t\tif (this.locationService != null) {\r\n\t\t  this.locationService.stop();\r\n\t\t}\r\n\t  }\r\n\r\n\t  public void unregisterListener() {\r\n\t\tif (this.locationService != null) {\r\n\t\t  this.locationService.unregisterListener(this.mListener);\r\n\t\t}\r\n\t\tthis.locationListener = null;\r\n\t  }\r\n\r\n\t  public static final class LocationInfo implements Serializable {\r\n\t\tprivate String addr;\r\n\t\tprivate String city;\r\n\t\tprivate String country;\r\n\t\tprivate String district;\r\n\t\tprivate double latitude;\r\n\t\tprivate double longitude;\r\n\t\tprivate String street;\r\n\r\n\t\tpublic String getAddr() {\r\n\t\t  return this.addr;\r\n\t\t}\r\n\r\n\t\tpublic String getCity() {\r\n\t\t  return this.city;\r\n\t\t}\r\n\r\n\t\tpublic String getCountry() {\r\n\t\t  return this.country;\r\n\t\t}\r\n\r\n\t\tpublic String getDistrict() {\r\n\t\t  return this.district;\r\n\t\t}\r\n\r\n\t\tpublic double getLatitude() {\r\n\t\t  return this.latitude;\r\n\t\t}\r\n\r\n\t\tpublic double getLongitude() {\r\n\t\t  return this.longitude;\r\n\t\t}\r\n\r\n\t\tpublic String getStreet() {\r\n\t\t  return this.street;\r\n\t\t}\r\n\r\n\t\tpublic void setAddr(String paramString) {\r\n\t\t  this.addr = paramString;\r\n\t\t}\r\n\r\n\t\tpublic void setCity(String paramString) {\r\n\t\t  this.city = paramString;\r\n\t\t}\r\n\r\n\t\tpublic void setCountry(String paramString) {\r\n\t\t  this.country = paramString;\r\n\t\t}\r\n\r\n\t\tpublic void setDistrict(String paramString) {\r\n\t\t  this.district = paramString;\r\n\t\t}\r\n\r\n\t\tpublic void setLatitude(double paramDouble) {\r\n\t\t  this.latitude = paramDouble;\r\n\t\t}\r\n\r\n\t\tpublic void setLongitude(double paramDouble) {\r\n\t\t  this.longitude = paramDouble;\r\n\t\t}\r\n\r\n\t\tpublic void setStreet(String paramString) {\r\n\t\t  this.street = paramString;\r\n\t\t}\r\n\t  }\r\n\r\n\t  public static abstract interface LocationListener {\r\n\t\tpublic abstract void onReceiveLocation(boolean paramBoolean,\r\n\t\t\tBaiduSdkHelper.LocationInfo paramLocationInfo);\r\n\t  }\r\n\t}\r\n\t\tpublic void setAddr(String paramString) {\r\n\t\t  this.addr = paramString;\r\n\t\t}\r\n\r\n\t\tpublic void setCity(String paramString) {\r\n\t\t  this.city = paramString;\r\n\t\t}\r\n\r\n\t\tpublic void setCountry(String paramString) {\r\n\t\t  this.country = paramString;\r\n\t\t}\r\n\r\n\t\tpublic void setDistrict(String paramString) {\r\n\t\t  this.district = paramString;\r\n\t\t}\r\n\r\n\t\tpublic void setLatitude(double paramDouble) {\r\n\t\t  this.latitude = paramDouble;\r\n\t\t}\r\n\r\n\t\tpublic void setLongitude(double paramDouble) {\r\n\t\t  this.longitude = paramDouble;\r\n\t\t}\r\n\r\n\t\tpublic void setStreet(String paramString) {\r\n\t\t  this.street = paramString;\r\n\t\t}\r\n\t  }\r\n\r\n\t  public static abstract interface LocationListener {\r\n\t\tpublic abstract void onReceiveLocation(boolean paramBoolean,\r\n\t\t\tBaiduSdkHelper.LocationInfo paramLocationInfo);\r\n\t  }\r\n\t}\r\n```\r\n\r\n\r\n\r\n- #### \u5f00\u59cbsmali\u7684\u4fee\u6539\r\n\t- \u627e\u5230 BaiduSdkHelper.smali\u6587\u4ef6\uff08\u4e0b\u9762\u53ea\u4fdd\u7559\u4e86\u7ecf\u7eac\u5ea6\u7684get\u65b9\u6cd5\uff09\r\n\t```smali\r\n\t.class public final Lcom/hhly/baidusdk/BaiduSdkHelper$LocationInfo;\r\n\t.super Ljava/lang/Object;\r\n\t.source \"BaiduSdkHelper.java\"\r\n\t# interfaces\r\n\t.implements Ljava/io/Serializable;\r\n\t# \u5220\u9664\u5176\u4ed6\u4ee3\u7801\r\n\t# instance fields\r\n\t.field private addr:Ljava/lang/String;\r\n\t.field private city:Ljava/lang/String;\r\n\t.field private country:Ljava/lang/String;\r\n\t.field private district:Ljava/lang/String;\r\n\t.field private latitude:D\r\n\t.field private longitude:D\r\n\t.field private street:Ljava/lang/String;\r\n\t.method public getLatitude()D\r\n\t\t.locals 2\r\n\r\n\t\t.prologue\r\n\t\tiput-wide v0, p0, Lcom/hhly/baidusdk/BaiduSdkHelper$LocationInfo;->latitude:D\r\n\t\t.line 177\r\n\t\tiget-wide v0, p0, Lcom/hhly/baidusdk/BaiduSdkHelper$LocationInfo;->latitude:D\r\n\r\n\t\treturn-wide v0\r\n\t.end method\r\n\r\n\t.method public getLongitude()D\r\n\t\t.locals 2\r\n\r\n\t\t.prologue\r\n\t\tiput-wide v0, p0, Lcom/hhly/baidusdk/BaiduSdkHelper$LocationInfo;->longitude:D\r\n\t\t.line 185\r\n\t\tiget-wide v0, p0, Lcom/hhly/baidusdk/BaiduSdkHelper$LocationInfo;->longitude:D\r\n\r\n\t\treturn-wide v0\r\n\t.end method\r\n\t```\r\n- \u627e\u5230smali\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u4fee\u6539\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u4e0d\u4f1a\u5199smali \uff0c\u600e\u4e48\u529e\u5462\uff1f \u6211\u4eec\u53ef\u4ee5\u5199java\u4ee3\u7801\u901a\u8fc7\u4e00\u4e2aidea\u7684\u63d2\u4ef6\u628ajava\u8f6c\u6362\u4e3asmali\uff0c[idea\u63d2\u4ef6](https://github.com/ollide/intellij-java2smali) \u7136\u540e\u518d\u628asmali\u590d\u5236\u5230\u6211\u4eec\u9700\u8981\u4fee\u6539\u7684\u5730\u65b9\r\n\t- smali \u7b80\u5355\u89e3\u91ca\r\n```smali\r\n\t\t# \u8fd9\u4e9b\u5e94\u8be5\u90fd\u80fd\u7406\u89e3\uff0c\u548cjava\u5dee\u4e0d\u591a\r\n\t\t.class public final Lcom/hhly/baidusdk/BaiduSdkHelper$LocationInfo;\r\n\t\t.super Ljava/lang/Object;\r\n\t\t.source \"BaiduSdkHelper.java\"\r\n\t\t# interfaces\r\n\t\t.implements Ljava/io/Serializable;\r\n\t\t#  .field \u5c5e\u6027\u58f0\u660e\r\n\t\t.field private latitude:D\r\n\t\t# \u58f0\u660e\u4e00\u4e2a\u65b9\u6cd5  .method \u65b9\u6cd5\u7684\u5f00\u59cb\r\n\t\t.method public getLongitude()D\r\n\t\t# \u7ed3\u675f\u4e00\u4e2a\u65b9\u6cd5\r\n\t\t.end method\r\n\t\t.locals 2 # \u7528\u5230\u7684\u5bc4\u5b58\u5668\u4e2a\u6570\r\n\t\t . prologue # \u8868\u793a\u65b9\u6cd5 \u6b63\u6587\u5185\u5bb9\u7684\u5f00\u59cb\uff0c\u6ca1\u4ec0\u4e48\u5b9e\u9645\u4f5c\u7528\r\n\t\t .line   # \u884c\u53f7\uff0c\u8c03\u8bd5\u7528\uff0c\u5220\u6389\u4e5f\u5565\u5173\u7cfb\r\n\t\tiput-object\u3000\u3000# \u5bf9\u8c61\u8d4b\u503c\r\n\t\tiget-object\u3000\u3000# \u8c03\u7528\u5bf9\u8c61\r\n\t\treturn-wide v0 # \u8fd4\u56de\u503c\r\n```\r\n\r\n- \u7f16\u5199 java \u4ee3\u7801 \uff08\u4e0a\u9762\u8bf4\u5230\u6211\u4e3a\u4ec0\u4e48 \u4fee\u6539get\u65b9\u6cd5\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u8bdd\uff0c\u6211\u4eec\u53ea\u9700\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684 javabean \u5c31\u4e0d\u9700\u8981\u5176\u4ed6\u7684\u4f9d\u8d56\uff0c\u5982\u679c\u6d89\u53ca\u5230\u5176\u4ed6\u7c7b\u7684\u4ee3\u7801\u5c31\u4e0d\u65b9\u4fbf\uff09\r\n```java\r\n\t\tpublic class Entity {\r\n\t\t  double latitude;\r\n\t\t  double longitude;\r\n\t\t  public double getLatitude() {\r\n\t\t\tlatitude = 22.550431d;\r\n\t\t\t//latitude = 39.926528;\r\n\t\t\treturn latitude;\r\n\t\t  }\r\n\t\t  public double getLongitude() {\r\n\t\t\tlongitude = 113.954007d;\r\n\t\t\t//longitude = 116.403299;\r\n\t\t\treturn longitude;\r\n\t\t  }\r\n\t}\r\n```\r\n\r\n- \u628a\u4e0a\u9762\u7684\u4ee3\u7801\u901a\u8fc7idea\u63d2\u4ef6\u8f6c\u6362\u4e3asmali \u5f97\u5230\u5982\u4e0bsmali\u4ee3\u7801\uff0c\r\n```smali\r\n\t.class public Lcom/libjpegcompress/activity/Entity;\r\n\t.super Ljava/lang/Object;\r\n\t.source \"Entity.java\"\r\n\t# instance fields\r\n\t.field addr:Ljava/lang/String;\r\n\t.field latitude:D\r\n\t.field longitude:D\r\n\t\r\n\t# direct methods\r\n\t.method public constructor <init>()V\r\n\t\t.registers 1\r\n\t\t.prologue\r\n\t\t.line 11\r\n\t\tinvoke-direct {p0}, Ljava/lang/Object;-><init>()V\r\n\t\treturn-void\r\n\t.end method\r\n\t\r\n\t.method public getLatitude()D\r\n\t\t.registers 3\r\n\t\t.prologue\r\n\t\t.line 17\r\n\t\t# \r\n\t\tconst-wide v0, 0x40368ce90bc7b45fL    # 22.550431\r\n\t\tiput-wide v0, p0, Lcom/libjpegcompress/activity/Entity;->latitude:D\r\n\t\t.line 19\r\n\t\tiget-wide v0, p0, Lcom/libjpegcompress/activity/Entity;->latitude:D\r\n\t\treturn-wide v0\r\n\t.end method\r\n\r\n\t.method public getLongitude()D\r\n\t\t.registers 3\r\n\t\t.prologue\r\n\t\t.line 23\r\n\t\tconst-wide v0, 0x405c7d0e736049edL    # 113.954007\r\n\t\tiput-wide v0, p0, Lcom/libjpegcompress/activity/Entity;->longitude:D\r\n\t\t.line 25\r\n\t\tiget-wide v0, p0, Lcom/libjpegcompress/activity/Entity;->longitude:D\r\n\t\treturn-wide v0\r\n\t.end method\r\n\t```\r\n\r\n**\tconst-wide v0, 0x40368ce90bc7b45fL    # 22.550431\r\n\tconst-wide v0, 0x405c7d0e736049edL    # 113.954007\r\n\t\u8fd9\u5c31\u662f\u6211\u4eec\u4fee\u6539\u503c\u7684\u4ee3\u7801\uff0c \u6211\u4eec\u53ea\u9700\u8981\u628a\u8fd9\u4e24\u53e5\u4ee3\u7801\u590d\u5236\u5230BaiduSdkHelper$LocationInfo.smali\u6587\u4ef6\u4e2d\uff0c\u4e0b\u9762\u662f\u4fee\u6539\u5b8c\u6210\u7684\u4ee3\u7801**\r\n\r\n\r\n\t```smali\r\n\t\t.method public getLatitude()D\r\n\t\t.locals 2\r\n\t\t.prologue\r\n\t\tconst-wide v0, 0x40368ce90bc7b45fL    # 22.550431\r\n\t\tiput-wide v0, p0, Lcom/hhly/baidusdk/BaiduSdkHelper$LocationInfo;->latitude:D\r\n\t\t.line 177\r\n\t\tiget-wide v0, p0, Lcom/hhly/baidusdk/BaiduSdkHelper$LocationInfo;->latitude:D\r\n\t\treturn-wide v0\r\n\t  .end method\r\n\r\n\t.method public getLongitude()D\r\n\t\t.locals 2\r\n\t\t.prologue\r\n\t\tconst-wide v0, 0x405c7d0e736049edL    # 113.954007\r\n\t\tiput-wide v0, p0, Lcom/hhly/baidusdk/BaiduSdkHelper$LocationInfo;->longitude:D\r\n\t\t.line 185\r\n\t\tiget-wide v0, p0, Lcom/hhly/baidusdk/BaiduSdkHelper$LocationInfo;->longitude:D\r\n\t\treturn-wide v0\r\n\t.end method\r\n```\r\n\r\n### \u5230\u6b64\u7ecf\u7eac\u5ea6\u4fee\u6539\u5b8c\u6210!!!!!!!!!!!!!!!\r\n\r\n-  #### \u521b\u5efa\u53f3\u8fb9\u83dc\u5355\u680f\r\n\r\n\t\u5728onCreate\u4e2d\u8c03\u7528\u6b64\u65b9\u6cd5\u4f1a\u751f\u6210\u5bf9\u5e94\u7684\u8c03\u7528\u65b9\u5f0f\uff0c\u5982\u4e0b\uff1a\r\n\t\t\tinvoke-virtual {p0}, Lcom/hhly/RTX/activity/WebviewActivity;->createRightView()V\r\n\t\u6211\u4eec\u5728\u6211\u4eec\u7684smali\u6587\u4ef6\u4e2d\u628a\u8c03\u7528\u65b9\u5f0f\u590d\u5236\u5230 \u5bf9\u5e94\u7684\u521d\u59cb\u5316\u65b9\u6cd5\u4e2d\u8fdb\u884c\u8c03\u7528\r\n\t```java\r\n\tpublic void createRightView() {\r\n\t\tTextView textView = new TextView(this);\r\n\t\ttextView.setText(\"\u9a8c\u8bc1\");\r\n\t\ttextView.setTextColor(Color.WHITE);\r\n\t\ttextView.setTextSize(17);\r\n\t\tFrameLayout.LayoutParams params = new FrameLayout.LayoutParams(-2, -2);\r\n\t\tDisplayMetrics displayMetrics = getResources().getDisplayMetrics();\r\n\t\tparams.topMargin =\r\n\t\t\t(int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 31, displayMetrics);\r\n\t\tparams.rightMargin =\r\n\t\t\t(int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 10, displayMetrics);\r\n\t\tparams.gravity = Gravity.RIGHT;\r\n\t\ttextView.setLayoutParams(params);\r\n\t\ttextView.setOnClickListener(new WebviewActivityMenuClick(this));\r\n\t\tViewGroup decorView = ((FrameLayout) getWindow().getDecorView());\r\n\t\tdecorView.addView(textView);\r\n\t  }\r\n\t```\r\n\r\n\t```smali\r\n\t.method public createRightView()V\r\n\t\t.registers 8\r\n\t\t.prologue\r\n\t\tconst/4 v6, 0x1\r\n\t\tconst/4 v5, -0x2\r\n\t\tnew-instance v3, Landroid/widget/TextView;\r\n\t\tinvoke-direct {v3, p0}, Landroid/widget/TextView;-><init>(Landroid/content/Context;)V\r\n\t\t.local v3, \"textView\":Landroid/widget/TextView;\r\n\t\tconst-string v4, \"\\u9a8c\\u8bc1\"\r\n\t\tinvoke-virtual {v3, v4}, Landroid/widget/TextView;->setText(Ljava/lang/CharSequence;)V\r\n\t\tconst/4 v4, -0x1\r\n\t\tinvoke-virtual {v3, v4}, Landroid/widget/TextView;->setTextColor(I)V\r\n\t\tconst/high16 v4, 0x41880000    # 17.0f\r\n\t\tinvoke-virtual {v3, v4}, Landroid/widget/TextView;->setTextSize(F)V\r\n\t\tnew-instance v2, Landroid/widget/FrameLayout$LayoutParams;\r\n\t\tinvoke-direct {v2, v5, v5}, Landroid/widget/FrameLayout$LayoutParams;-><init>(II)V\r\n\t\t.local v2, \"params\":Landroid/widget/FrameLayout$LayoutParams;\r\n\t\tinvoke-virtual {p0}, Lcom/hhly/RTX/activity/WebviewActivity;->getResources()Landroid/content/res/Resources;\r\n\t\tmove-result-object v4\r\n\t\tinvoke-virtual {v4}, Landroid/content/res/Resources;->getDisplayMetrics()Landroid/util/DisplayMetrics;\r\n\t\tmove-result-object v1\r\n\t\t.local v1, \"displayMetrics\":Landroid/util/DisplayMetrics;\r\n\t\tconst/high16 v4, 0x41f80000    # 31.0f\r\n\t\tinvoke-static {v6, v4, v1}, Landroid/util/TypedValue;->applyDimension(IFLandroid/util/DisplayMetrics;)F\r\n\t\tmove-result v4\r\n\t\tfloat-to-int v4, v4\r\n\t\tiput v4, v2, Landroid/widget/FrameLayout$LayoutParams;->topMargin:I\r\n\t\tconst/high16 v4, 0x41200000    # 10.0f\r\n\t\tinvoke-static {v6, v4, v1}, Landroid/util/TypedValue;->applyDimension(IFLandroid/util/DisplayMetrics;)F\r\n\t\tmove-result v4\r\n\t\tfloat-to-int v4, v4\r\n\t\tiput v4, v2, Landroid/widget/FrameLayout$LayoutParams;->rightMargin:I\r\n\t\tconst/4 v4, 0x5\r\n\t\tiput v4, v2, Landroid/widget/FrameLayout$LayoutParams;->gravity:I\r\n\t\tinvoke-virtual {v3, v2}, Landroid/widget/TextView;->setLayoutParams(Landroid/view/ViewGroup$LayoutParams;)V\r\n\t\tnew-instance v4, Lcom/hhly/RTX/activity/WebviewActivityMenuClick;\r\n\t\tinvoke-direct {v4, p0}, Lcom/hhly/RTX/activity/WebviewActivityMenuClick;-><init>(Landroid/app/Activity;)V\r\n\t\tinvoke-virtual {v3, v4}, Landroid/widget/TextView;->setOnClickListener(Landroid/view/View$OnClickListener;)V\r\n\t\t# java\u8f6csmali\u7684\u65f6\u5019\u6ce8\u610f\u5305\u540d\uff0c\u8981\u6539\u6210\u4f60  \u6240\u9700\u8981\u4fee\u6539\u7684smali\u6587\u4ef6\u6240\u5728\u7684\u7c7b\uff0c\u6211\u7684\u662f\u8fd9\u4e2a com/hhly/RTX/activity/PunchCardActivity;\r\n\t\tinvoke-virtual {p0}, Lcom/hhly/RTX/activity/WebviewActivity;->getWindow()Landroid/view/Window;\r\n\t\tmove-result-object v4\r\n\t\tinvoke-virtual {v4}, Landroid/view/Window;->getDecorView()Landroid/view/View;\r\n\t\tmove-result-object v0\r\n\t\tcheck-cast v0, Landroid/widget/FrameLayout;\r\n\t\t.local v0, \"decorView\":Landroid/view/ViewGroup;\r\n\t\tinvoke-virtual {v0, v3}, Landroid/view/ViewGroup;->addView(Landroid/view/View;)V\r\n\t\treturn-void\r\n\t.end method\r\n\t```\r\n\r\n\r\n- #### \u521b\u5efa \u9a8c\u8bc1 \u6309\u94ae\u5bf9\u5e94\u7684webview\u754c\u9762, \u521b\u5efa\u5b8c\u6210\u4e4b\u540e\u4e5f\u662f\u901a\u8fc7 idea\u63d2\u4ef6\u8f6c\u6362\u6210\u5bf9\u5e94\u7684smali\u6587\u4ef6\uff0c\u76f4\u63a5\u628a\u6587\u4ef6\u590d\u5236\u5230\u5bf9\u5e94\u7684\u5305\u4e0b(\u968f\u4fbf\u54ea\u4e2a\u5305\uff0c\u53ea\u8981\u8c03\u7528\u7684\u65f6\u5019\u6ce8\u610f\u6539\u5305\u540d\u548csmali\u6587\u4ef6\u4e2d\u7684\u5305\u58f0\u540d)\r\n\r\n\r\n\t```java\r\n\tpublic class WebviewActivity extends AppCompatActivity {\r\n\t  private WebView view;\r\n\t  @Override protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n\t\tsuper.onCreate(savedInstanceState);\r\n\t\trequestWindowFeature(Window.FEATURE_NO_TITLE);\r\n\t\tview = new WebView(this);\r\n\t\tsetContentView(view);\r\n\t\tWebSettings settings = view.getSettings();\r\n\t\tsettings.setJavaScriptEnabled(true);\r\n\t\tsettings.setDomStorageEnabled(true);\r\n\t\tsettings.setDatabaseEnabled(true);\r\n\t\tsettings.setGeolocationEnabled(true);\r\n\t\tview.setWebViewClient(new WebViewClient() {\r\n\t\t  @Override\r\n\t\t  public WebResourceResponse shouldInterceptRequest(WebView view, WebResourceRequest request) {\r\n\t\t\treturn super.shouldInterceptRequest(view, request);\r\n\t\t  }\r\n\t\t});\r\n\t\tview.loadUrl(\"file:///android_asset/valid.html\");\r\n\t\tview.addJavascriptInterface(this, \"webview\");\r\n\t\tcreateRightView();\r\n\t  }\r\n\r\n\t  @JavascriptInterface public void toast(String msg) {\r\n\t\tToast.makeText(this, msg, Toast.LENGTH_SHORT).show();\r\n\t  }\r\n\t```\r\n\r\n\u4fee\u6539\u5b8c\u6210\u4e4b\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7 apktool \u91cd\u6253\u5305\u4e86\r\n```bash\r\njava -jar apktool.jar b ./71ant_setup/\r\n```\r\n\r\n\r\n\u7b49\u5f85\u6253\u5305\u5b8c\u6210\u4e4b\u540e\u6211\u4eec\u8fd8\u9700\u8981\u5bf9apk\u91cd\u65b0\u8fdb\u884c\u7b7e\u540d\r\n```bash\r\njarsigner -keystore debug.keystore MyApp.apk androiddebugkey\r\n```\r\n\r\n#### \u5230\u6b64 Android\u7b80\u5355\u9006\u5411\u5206\u6790\u5230\u6b64\u7ed3\u675f\r\n\r\n\r\n## \u603b\u7ed3\r\n<hr/>\r\n##### 1. \u5982\u679c apk \u88ab\u52a0\u56fa\uff0capktool\u4e0d\u4e00\u5b9a\u53ef\u4ee5\u53cd\u7f16\u8bd1\r\n##### 2. \u5982\u679capk\u88ab\u6df7\u6dc6\u6216\u8005\u903b\u8f91\u590d\u6742\uff0c\u6211\u4eec\u9006\u5411\u7684\u5de5\u4f5c\u96be\u5ea6\u5c31\u4f1a\u5927\u5927\u7684\u63d0\u9ad8\r\n##### 3. \u6211\u4eec\u5728\u4fee\u6539smali\u7684\u65f6\u5019\u9700\u8981\u7279\u522b  \u6ce8\u610f smali\u4e2d\u7684  \u5bc4\u5b58\u5668\u4e0d\u8981\u5199\u9519\u4e86\uff0c<br/>\u56e0\u4e3a\u6211\u4eec\u662f\u901a\u8fc7java\u4ee3\u7801 \u7f16\u8bd1\u6210 smali\u7684\uff0c\u6240\u4ee5\u548c\u6e90smali\u4e2d\u7684\u4f1a\u6709\u4e00\u4e9b\u51fa\u5165\r\n##### 4. \u5199\u7684\u4e0d\u597d\u5730\u65b9\uff0c\u8bf7\u89c1\u8c05\uff0c\u6211\u4e5f\u83dc\uff0cO(\u2229_\u2229)O\u54c8\u54c8~\r\n\r\n\u66f4\u591a\u535a\u5ba2\u5185\u5bb9\u8bf7\u5173\u6ce8\uff1a[http://boke.liwg.top/](http://boke.liwg.top/)", "created_time": "2019-11-04T02:18:00Z", "modified_time": "2019-11-04T02:18:52.722Z", "excerpt": " \u672c\u7bc7\u6587\u7ae0\u4f1a\u901a\u8fc7\u4e00\u4e2a\u6848\u4f8b\u5bf9\u9006\u5411\u7834\u89e3\u7684\u6d41\u7a0b\u8fdb\u884c\u8be6\u7ec6\u7684\u89e3\u8bf4\r\n1. \u901a\u8fc7\u672c\u7bc7\u6587\u7ae0\u4f60\u4f1a\u77e5\u9053\u9006\u5411\u7684\u4e00\u4e2a\u7b80\u5355\u6d41\u7a0b\r\n2. \u5b66\u4f1a\u7b80\u5355\u7684\u9006\u5411\u5f00\u53d1\r\n\r\n \u4e0b\u9762\u662f\u516c\u53f8\u5185\u90e8\u7684\u4e00\u4e2a\u6253\u5361\u7cfb\u7edf\uff0csmali\u4fee\u6539\u7684\u6709\u4e24\u4e2a\u5730\u65b9\r\n1. \u6253\u5361\u7684\u4f4d\u7f6e\u4fe1\u606f\r\n2. \u53f3\u4e0a\u89d2\u7684\u9a8c\u8bc1\u6309\u94ae\uff0c\u516c\u53f8\u7684\u6253\u5361\u7cfb\u7edf\u903b\u8f91\u662f  \u7528\u624b\u673a\u6253\u5361\u4e4b\u540e\u5fc5\u987b\u4f7f\u7528 we", "views": 500, "words": 20734, "category": 1, "author": 1, "status": "p", "stick": "n", "tag": [1]}}, {"model": "blog.post", "pk": 4, "fields": {"title": "\u63a2\u7d22Activity\u542f\u52a8\u6d41\u7a0b-\u5b9e\u73b0\u6253\u5f00\u63d2\u4ef6\u4e2d\u7684Activity", "body": "\u901a\u8fc7\u5206\u6790Activity\u7684\u542f\u52a8\u6d41\u7a0b\uff0c\u63a2\u7d22Android\u7684\u63d2\u4ef6\u5316\uff0c\u4e0b\u9762\u901a\u8fc7\u6e90\u7801\u5206\u6790\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u63d2\u4ef6\u5316\r\n\u6253\u5f00\u4e00\u4e2a \u672a\u5b89\u88c5apk\u4e2d\u7684Activity\r\n\r\n### \u5f00\u59cb\u5206\u6790\r\nActivity\u7684\u542f\u52a8\u6d41\u7a0b\u4ece startActivity\u5f00\u59cb\r\n```java\r\n// Activity.java\r\npublic void startActivity(Intent intent) {\r\n        this.startActivity(intent, null);\r\n}\r\n\r\npublic void startActivity(Intent intent, @Nullable Bundle options) {\r\n    if (options != null) {\r\n        startActivityForResult(intent, -1, options);\r\n    } else {\r\n        // Note we want to go through this call for compatibility with\r\n        // applications that may have overridden the method.\r\n        startActivityForResult(intent, -1);\r\n    }\r\n}\r\n// \u6700\u7ec8\u4f1a\u8c03\u7528\u5230\u8fd9\u4e2a\u65b9\u6cd5\r\npublic void startActivityForResult(@RequiresPermission Intent intent, int requestCode,\r\n    @Nullable Bundle options) {\r\n    if (mParent == null) {\r\n        options = transferSpringboardActivityOptions(options);\r\n        Instrumentation.ActivityResult ar =\r\n            mInstrumentation.execStartActivity(\r\n                this, mMainThread.getApplicationThread(), mToken, this,\r\n                intent, requestCode, options);\r\n        if (ar != null) {\r\n            mMainThread.sendActivityResult(\r\n                mToken, mEmbeddedID, requestCode, ar.getResultCode(),\r\n                ar.getResultData());\r\n\t}\r\n    //\u7701\u7565\u5176\u4ed6\u4ee3\u7801\r\n    .............\r\n}\r\n```\r\n\u7136\u540e\u901a\u8fc7 Instrumentation.execStartActivity() \u65b9\u6cd5\u542f\u52a8\u4e00\u4e2aActivity,\u6211\u4eec\u8ddf\u8fdb\u8fd9\u4e2a\u65b9\u6cd5,\u5728\u65b9\u6cd5\u4e2d\u53d1\u73b0\u4e86\u8fd9\u4e48\u4e00\u6bb5\u4ee3\u7801\r\n\u8fd9\u662f\u901a\u8fc7 ActivityManagerService \u542f\u52a8Activity \u7b80\u79f0ams\uff0c\u8fd9\u662f\u4e00\u4e2a\u7cfb\u7edf\u7ea7\u7684\u670d\u52a1\uff0c\u6211\u4eec\u7ee7\u7eed\u8ddf\u8fdb\r\n```java\r\nint result = ActivityManager.getService()\r\n                .startActivity(whoThread, who.getBasePackageName(), intent,\r\n                        intent.resolveTypeIfNeeded(who.getContentResolver()),\r\n                        token, target != null ? target.mEmbeddedID : null,\r\n                        requestCode, 0, null, options);\r\n```\r\nActivityManager.java, \u901a\u8fc7ServiceManager.getService()\u83b7\u53d6ActivityManager\u7684\u670d\u52a1\r\n```java\r\n/**\r\n     * @hide\r\n     */\r\n    public static IActivityManager getService() {\r\n        return IActivityManagerSingleton.get();\r\n    }\r\n\r\n    private static final Singleton<IActivityManager> IActivityManagerSingleton =\r\n            new Singleton<IActivityManager>() {\r\n                @Override\r\n                protected IActivityManager create() {\r\n                    final IBinder b = ServiceManager.getService(Context.ACTIVITY_SERVICE);\r\n                    final IActivityManager am = IActivityManager.Stub.asInterface(b);\r\n                    return am;\r\n                }\r\n            };\r\n```\r\nActivityManager \u7684\u670d\u52a1\u662f\u4ec0\u4e48\u65f6\u5019\u6ce8\u518c\u5230ServiceManager\u4e2d\u7684 ? \u901a\u8fc7\u6e90\u7801\u67e5\u770b\u53d1\u73b0 ActivityManagerService \u662f\u5728SystemServer \u4e2d\u521d\u59cb\u5316\u7684\u3002 \u8fd9\u4e2aSystemServer \u53c8\u662f\u4ec0\u4e48\u4e1c\u897f\u4e86\uff1f\r\n> SystemServer \u662f\u7cfb\u7edf\u7ea7\u522b\u7684\u670d\u52a1\uff0c\u5f53\u7cfb\u7edf\u88ab\u542f\u52a8\u65f6\uff0c\u9996\u5148\u4f1a\u6267\u884c\u7cfb\u7edf\u7684 init \u8fdb\u7a0b \u7136\u540e\u901a\u8fc7fork\u521b\u5efaZygote \u8fdb\u7a0b\u5176\u5b9e\u4e5f\u5c31\u662fapp_process\u8fdb\u7a0b\uff0c\u8fd9\u4e9b\u90fd native \u4ee3\u7801\uff0c \u6700\u7ec8\u4f1a\u6267\u884c\u5230java\u5c42\u7684 ZygoteInit\u4e2d\u7684main\u65b9\u6cd5\r\n\r\nZygoteInit.java \u5728main\u65b9\u6cd5\u4e2d\u4f1a \u8c03\u7528 startSystemServer\r\n```java\r\n /**\r\n  * Prepare the arguments and fork for the system server process.\r\n  */\r\nprivate static boolean startSystemServer(String abiList, String socketName, ZygoteServer zygoteServer)\r\n            throws Zygote.MethodAndArgsCaller, RuntimeException {\r\n        long capabilities = posixCapabilitiesAsBits(\r\n            OsConstants.CAP_IPC_LOCK,\r\n            OsConstants.CAP_KILL,\r\n            OsConstants.CAP_NET_ADMIN,\r\n            OsConstants.CAP_NET_BIND_SERVICE,\r\n            OsConstants.CAP_NET_BROADCAST,\r\n            OsConstants.CAP_NET_RAW,\r\n            OsConstants.CAP_SYS_MODULE,\r\n            OsConstants.CAP_SYS_NICE,\r\n            OsConstants.CAP_SYS_PTRACE,\r\n            OsConstants.CAP_SYS_TIME,\r\n            OsConstants.CAP_SYS_TTY_CONFIG,\r\n            OsConstants.CAP_WAKE_ALARM\r\n        );\r\n        /* Containers run without this capability, so avoid setting it in that case */\r\n        if (!SystemProperties.getBoolean(PROPERTY_RUNNING_IN_CONTAINER, false)) {\r\n            capabilities |= posixCapabilitiesAsBits(OsConstants.CAP_BLOCK_SUSPEND);\r\n        }\r\n        /* Hardcoded command line to start the system server */\r\n        String args[] = {\r\n            \"--setuid=1000\",\r\n            \"--setgid=1000\",\r\n            \"--setgroups=1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1018,1021,1023,1032,3001,3002,3003,3006,3007,3009,3010\",\r\n            \"--capabilities=\" + capabilities + \",\" + capabilities,\r\n            \"--nice-name=system_server\",\r\n            \"--runtime-args\",\r\n            \"com.android.server.SystemServer\",\r\n        };\r\n        ZygoteConnection.Arguments parsedArgs = null;\r\n\r\n        int pid;\r\n\r\n        try {\r\n            parsedArgs = new ZygoteConnection.Arguments(args);\r\n            ZygoteConnection.applyDebuggerSystemProperty(parsedArgs);\r\n            ZygoteConnection.applyInvokeWithSystemProperty(parsedArgs);\r\n\r\n            /* Request to fork the system server process */\r\n            pid = Zygote.forkSystemServer(\r\n                    parsedArgs.uid, parsedArgs.gid,\r\n                    parsedArgs.gids,\r\n                    parsedArgs.debugFlags,\r\n                    null,\r\n                    parsedArgs.permittedCapabilities,\r\n                    parsedArgs.effectiveCapabilities);\r\n        } catch (IllegalArgumentException ex) {\r\n            throw new RuntimeException(ex);\r\n        }\r\n\r\n        /* For child process */\r\n        if (pid == 0) {\r\n            if (hasSecondZygote(abiList)) {\r\n                waitForSecondaryZygote(socketName);\r\n            }\r\n\r\n            zygoteServer.closeServerSocket();\r\n            handleSystemServerProcess(parsedArgs);\r\n        }\r\n\r\n        return true;\r\n    }\r\n```\r\n\u901a\u8fc7 Zygote.java \u4e2d\u7684 forkSystemServer\u65b9\u6cd5 \u6700\u7ec8\u901a\u8fc7Native\u65b9\u6cd5 \u521b\u5efa system_server\u8fdb\u7a0b\uff0c\u540c\u65f6\u6267\u884c\u4e86 com.android.server.SystemServer \u4e2d\u7684main\u65b9\u6cd5\r\n> main\u65b9\u6cd5 \u53c8\u8c03\u7528 new SystemServer().run()\u65b9\u6cd5\uff0crun\u65b9\u6cd5\u4e2d\u6709\u5982\u4e0b\u4ee3\u7801 \uff0c\u4e3b\u8981\u662f\u521d\u59cb\u5316\u4e00\u7cfb\u5217\u7684 \u7cfb\u7edf\u670d\u52a1\r\n\r\n```java\r\n try {\r\n            traceBeginAndSlog(\"StartServices\");\r\n            startBootstrapServices();\r\n            startCoreServices();\r\n            startOtherServices();\r\n            SystemServerInitThreadPool.shutdown();\r\n        } catch (Throwable ex) {\r\n            Slog.e(\"System\", \"******************************************\");\r\n            Slog.e(\"System\", \"************ Failure starting system services\", ex);\r\n            throw ex;\r\n        } finally {\r\n            traceEnd();\r\n        }\r\n```\r\nstartBootstrapServices() \u65b9\u6cd5 \u6709\u8fd9\u4e48\u4e00\u6bb5\u4ee3\u7801\r\n\r\n```java\r\n// \u521b\u5efa ActivityManagerService \u5bf9\u8c61\r\nmActivityManagerService = mSystemServiceManager.startService(ActivityManagerService.Lifecycle.class).getService();\r\nmActivityManagerService.setSystemServiceManager(mSystemServiceManager);\r\nmActivityManagerService.setInstaller(installer);\r\n.........\r\n// \u5728\u540e\u9762\u8fd8\u6709 mActivityManagerService.setSystemProcess() \u8fd9\u4e48\u4e00\u53e5\u4ee3\u7801\r\n // Set up the Application instance for the system process and get started.\r\ntraceBeginAndSlog(\"SetSystemProcess\");\r\nmActivityManagerService.setSystemProcess();\r\ntraceEnd();\r\n```\r\n\r\n\u6211\u4eec\u5230ActivityManagerService.java \u4e2d\u627e\u5230\u8fd9\u4e2a\u65b9\u6cd5,\u5230\u6b64\u6211\u4eec\u5c31\u627e\u5230\u4e86 ActivityManagerService \u662f\u600e\u4e48\u6ce8\u518c\u5230\r\nServiceManager \u4e2d\u7684\r\n```java\r\npublic void setSystemProcess() {\r\n        try {\r\n            ServiceManager.addService(Context.ACTIVITY_SERVICE, this, true);\r\n            ServiceManager.addService(ProcessStats.SERVICE_NAME, mProcessStats);\r\n            ServiceManager.addService(\"meminfo\", new MemBinder(this));\r\n            ServiceManager.addService(\"gfxinfo\", new GraphicsBinder(this));\r\n            ServiceManager.addService(\"dbinfo\", new DbBinder(this));\r\n            if (MONITOR_CPU_USAGE) {\r\n                ServiceManager.addService(\"cpuinfo\", new CpuBinder(this));\r\n            }\r\n            ServiceManager.addService(\"permission\", new PermissionController(this));\r\n            ServiceManager.addService(\"processinfo\", new ProcessInfoService(this));\r\n\r\n            ApplicationInfo info = mContext.getPackageManager().getApplicationInfo(\r\n                    \"android\", STOCK_PM_FLAGS | MATCH_SYSTEM_ONLY);\r\n            mSystemThread.installSystemApplicationInfo(info, getClass().getClassLoader());\r\n\r\n            synchronized (this) {\r\n                ProcessRecord app = newProcessRecordLocked(info, info.processName, false, 0);\r\n                app.persistent = true;\r\n                app.pid = MY_PID;\r\n                app.maxAdj = ProcessList.SYSTEM_ADJ;\r\n                app.makeActive(mSystemThread.getApplicationThread(), mProcessStats);\r\n                synchronized (mPidsSelfLocked) {\r\n                    mPidsSelfLocked.put(app.pid, app);\r\n                }\r\n                updateLruProcessLocked(app, false, null);\r\n                updateOomAdjLocked();\r\n            }\r\n        } catch (PackageManager.NameNotFoundException e) {\r\n            throw new RuntimeException(\r\n                    \"Unable to find android system package\", e);\r\n        }\r\n    }\r\n```\r\n\u626f\u4e86\u8fd9\u4e48\u591a\u6211\u4eec\u7ee7\u7eed\u56de\u5230  ActivityManager.getService().startActivity \u7684\u4ee3\u7801\u5904\uff0c\u901a\u8fc7\u524d\u9762\u7684\u5206\u6790\u6211\u4eec\u77e5\u9053\u4e86  ActivityManager.getService()\u5f97\u5230\u662f ActivityManagerService\u5bf9\u8c61\uff0c \u6211\u4eec\u5230 ActivityManagerService\u4e2d\u627e\u5230\u5bf9\u5e94\u7684\r\nstartActivity\u65b9\u6cd5\r\n- \u901a\u8fc7\u6e90\u7801\u53d1\u73b0 \u5728 ***startActivity*** \u65b9\u6cd5\u4e2d\u8c03\u7528\u7684\u662f ***startActivityAsUser*** \u65b9\u6cd5\u7136\u540e\u53c8\u8c03\u7528\u4e86\r\n***mActivityStarter.startActivityMayWait***\r\n\r\n##### mActivityStarter.startActivityMayWait \u65b9\u6cd5\uff0c \u6e90\u7801\u4e2d\u6bd4\u8f83\u590d\u6742\u6211\u5c31\u4e0d\u7ec6\u7ec6\u5206\u6790\u4e86\uff0c\u8fd9\u91cc\u4e3b\u8981\u5c31\u5206\u6790\u4e00\u4e2a\u6d41\u7a0b\r\n```java\r\nfinal int startActivityMayWait(IApplicationThread caller, int callingUid,\r\n            String callingPackage, Intent intent, String resolvedType,\r\n            IVoiceInteractionSession voiceSession, IVoiceInteractor voiceInteractor,\r\n            IBinder resultTo, String resultWho, int requestCode, int startFlags,\r\n            ProfilerInfo profilerInfo, WaitResult outResult,\r\n            Configuration globalConfig, Bundle bOptions, boolean ignoreTargetSecurity, int userId,\r\n            IActivityContainer iContainer, TaskRecord inTask, String reason) {\r\n        // Refuse possible leaked file descriptors\r\n        \t.............\u7701\u7565\u5176\u4ed6\u4ee3\u7801\r\n\r\n            final ActivityRecord[] outRecord = new ActivityRecord[1];\r\n            int res = startActivityLocked(caller, intent, ephemeralIntent, resolvedType,\r\n                    aInfo, rInfo, voiceSession, voiceInteractor,\r\n                    resultTo, resultWho, requestCode, callingPid,\r\n                    callingUid, callingPackage, realCallingPid, realCallingUid, startFlags,\r\n                    options, ignoreTargetSecurity, componentSpecified, outRecord, container,\r\n                    inTask, reason);\r\n\t\t\t.............\u7701\u7565\u5176\u4ed6\u4ee3\u7801\r\n    }\r\n```\r\n##### startActivityLocked \u65b9\u6cd5\r\n```java\r\n int startActivityLocked(IApplicationThread caller,.......) {\r\n        mLastStartActivityResult = startActivity(caller, intent, ephemeralIntent, resolvedType,\r\n                aInfo, rInfo, voiceSession, voiceInteractor, resultTo, resultWho, requestCode,\r\n                callingPid, callingUid, callingPackage, realCallingPid, realCallingUid, startFlags,\r\n                options, ignoreTargetSecurity, componentSpecified, mLastStartActivityRecord,\r\n                container, inTask);\r\n\r\n        if (outActivity != null) {\r\n            // mLastStartActivityRecord[0] is set in the call to startActivity above.\r\n            outActivity[0] = mLastStartActivityRecord[0];\r\n        }\r\n        return mLastStartActivityResult;\r\n    }\r\n```\r\n##### startActivity\r\n```java\r\nprivate int startActivity(IApplicationThread caller, Intent intent,.........) {\r\n        return startActivity(r, sourceRecord, voiceSession, voiceInteractor, startFlags, true,\r\n                options, inTask, outActivity);\r\n    }\r\n```\r\n##### \u7ee7\u7eed\u8c03\u7528 \u91cd\u8f7d \u7684 startActivity\r\n```java\r\nprivate int startActivity(final ActivityRecord r, ActivityRecord sourceRecord,\r\n            IVoiceInteractionSession voiceSession, IVoiceInteractor voiceInteractor,\r\n            int startFlags, boolean doResume, ActivityOptions options, TaskRecord inTask,\r\n            ActivityRecord[] outActivity) {\r\n        int result = START_CANCELED;\r\n        try {\r\n            mService.mWindowManager.deferSurfaceLayout();\r\n            result = startActivityUnchecked(r, sourceRecord, voiceSession, voiceInteractor,\r\n                    startFlags, doResume, options, inTask, outActivity);\r\n        } finally {\r\n            // If we are not able to proceed, disassociate the activity from the task. Leaving an\r\n            // activity in an incomplete state can lead to issues, such as performing operations\r\n            // without a window container.\r\n            if (!ActivityManager.isStartResultSuccessful(result)\r\n                    && mStartActivity.getTask() != null) {\r\n                mStartActivity.getTask().removeActivity(mStartActivity);\r\n            }\r\n            mService.mWindowManager.continueSurfaceLayout();\r\n        }\r\n\r\n        postStartActivityProcessing(r, result, mSupervisor.getLastStack().mStackId,  mSourceRecord,\r\n                mTargetStack);\r\n\r\n        return result;\r\n    }\r\n```\r\n##### startActivityUnchecked\r\n```java\r\nprivate int startActivityUnchecked(final ActivityRecord r, ActivityRecord sourceRecord,\r\n            IVoiceInteractionSession voiceSession, IVoiceInteractor voiceInteractor,\r\n            int startFlags, boolean doResume, ActivityOptions options, TaskRecord inTask,\r\n            ActivityRecord[] outActivity) {\r\n            ...........\r\n                mSupervisor.resumeFocusedStackTopActivityLocked(mTargetStack, mStartActivity,\r\n                        mOptions);\r\n\t\t\t...........\r\n        return START_SUCCESS;\r\n    }\r\n```\r\n#####  mSupervisor.resumeFocusedStackTopActivityLocked(mTargetStack, mStartActivity,mOptions);\r\n```java\r\nboolean resumeFocusedStackTopActivityLocked(\r\n            ActivityStack targetStack, ActivityRecord target, ActivityOptions targetOptions) {\r\n        if (targetStack != null && isFocusedStack(targetStack)) {\r\n            return targetStack.resumeTopActivityUncheckedLocked(target, targetOptions);\r\n        }\r\n        return false;\r\n    }\r\n```\r\n##### targetStack.resumeTopActivityUncheckedLocked(target, targetOptions)\r\n```java\r\nboolean resumeTopActivityUncheckedLocked(ActivityRecord prev, ActivityOptions options) {\r\n        if (mStackSupervisor.inResumeTopActivity) {\r\n            // Don't even start recursing.\r\n            return false;\r\n        }\r\n        boolean result = false;\r\n        try {\r\n            // Protect against recursion.\r\n            mStackSupervisor.inResumeTopActivity = true;\r\n            result = resumeTopActivityInnerLocked(prev, options);\r\n        } finally {\r\n            mStackSupervisor.inResumeTopActivity = false;\r\n        }\r\n        return result;\r\n    }\r\n```\r\n##### resumeTopActivityInnerLocked()\r\n```java\r\nprivate boolean resumeTopActivityInnerLocked(ActivityRecord prev, ActivityOptions options) {\r\n\t.............\u7701\u7565\u5176\u4ed6\u4ee3\u7801\r\n\tmStackSupervisor.startSpecificActivityLocked(next, true, true);\r\n}\r\n```\r\n##### mStackSupervisor.startSpecificActivityLocked(next, true, true)\r\n```java\r\nvoid startSpecificActivityLocked(ActivityRecord r,\r\n            boolean andResume, boolean checkConfig) {\r\n        // Is this activity's application already running?\r\n        .................\u7701\u7565\u5176\u4ed6\u4ee3\u7801\r\n        ProcessRecord app = mService.getProcessRecordLocked(r.processName,\r\n                r.info.applicationInfo.uid, true);\r\n        if (app != null && app.thread != null) {\r\n            try {\r\n                realStartActivityLocked(r, app, andResume, checkConfig);\r\n                return;\r\n            } catch (RemoteException e) {\r\n                Slog.w(TAG, \"Exception when starting activity \"\r\n                        + r.intent.getComponent().flattenToShortString(), e);\r\n            }\r\n        }\r\n        .................\u7701\u7565\u5176\u4ed6\u4ee3\u7801\r\n    }\r\n```\r\n#####  realStartActivityLocked(r, app, andResume, checkConfig)\r\n> app.thread \u662f\u5565\u5462\uff1f \u5176\u5b9e\u5c31\u662f IApplicationThread \u8fd9\u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u5b83\u7684\u5b9e\u73b0\u7c7b\u5c31\u662f  ActivityThread \u4e2d\u7684 ApplicationThread \u5185\u90e8\u7c7b\r\n> ActivityThread \u53c8\u662f\u5565\uff1f \u7b80\u5355\u6765\u8bf4\u5c31\u662f\u4e00\u4e2aAPP\u7684\u5165\u53e3,\u542f\u52a8\u4e00\u4e2aApp \u90fd\u4ece\u8fd9\u4e2a\u7c7b\u7684main\u65b9\u6cd5\u5f00\u59cb\r\n\r\n```java\r\n final boolean realStartActivityLocked(ActivityRecord r, ProcessRecord app,\r\n            boolean andResume, boolean checkConfig) throws RemoteException {\r\n\t app.thread.scheduleLaunchActivity(new Intent(r.intent), r.appToken,\r\n                    System.identityHashCode(r), r.info,\r\n                    // TODO: Have this take the merged configuration instead of separate global and\r\n                    // override configs.\r\n                    mergedConfiguration.getGlobalConfiguration(),\r\n                    mergedConfiguration.getOverrideConfiguration(), r.compat,\r\n                    r.launchedFromPackage, task.voiceInteractor, app.repProcState, r.icicle,\r\n                    r.persistentState, results, newIntents, !andResume,\r\n                    mService.isNextTransitionForward(), profilerInfo);\r\n}\r\n```\r\n##### ApplicationThread.scheduleLaunchActivity \u8fd9\u65b9\u6cd5\u5185\u90e8\u5c31\u662f\u901a\u8fc7 Handle \u53d1\u9001\u4e86\u4e00\u4e2a LAUNCH_ACTIVITY \u7684\u6d88\u606f\r\n```java\r\npublic final void scheduleLaunchActivity(Intent intent, IBinder token, int ident,\r\n                ActivityInfo info, Configuration curConfig, Configuration overrideConfig,\r\n                CompatibilityInfo compatInfo, String referrer, IVoiceInteractor voiceInteractor,\r\n                int procState, Bundle state, PersistableBundle persistentState,\r\n                List<ResultInfo> pendingResults, List<ReferrerIntent> pendingNewIntents,\r\n                boolean notResumed, boolean isForward, ProfilerInfo profilerInfo) {\r\n\r\n            updateProcessState(procState, false);\r\n\t\t\t........\u7701\u7565\u5176\u4ed6\u4ee3\u7801\r\n            sendMessage(H.LAUNCH_ACTIVITY, r);\r\n        }\r\n```\r\n\u5728 ActivityThread \u4e2d\u6709\u4e00\u4e2a Handler \u5185\u90e8\u7c7b private class H extends Handler {},\u6211\u4eec\u6765\u5230 Handler\u4e2d\u7684 handleMessage\u65b9\u6cd5\r\n```java\r\npublic void handleMessage(Message msg) {\r\n    if (DEBUG_MESSAGES) Slog.v(TAG, \">>> handling: \" + codeToString(msg.what));\r\n    switch (msg.what) {\r\n        case LAUNCH_ACTIVITY:\r\n            Trace.traceBegin(Trace.TRACE_TAG_ACTIVITY_MANAGER, \"activityStart\");\r\n            final ActivityClientRecord r = (ActivityClientRecord) msg.obj;\r\n\r\n            r.packageInfo = getPackageInfoNoCheck(\r\n                    r.activityInfo.applicationInfo, r.compatInfo);\r\n            handleLaunchActivity(r, null, \"LAUNCH_ACTIVITY\");\r\n            Trace.traceEnd(Trace.TRACE_TAG_ACTIVITY_MANAGER);\r\n   }\r\n}\r\n```\r\n##### private void handleLaunchActivity(ActivityClientRecord r, Intent customIntent, String reason)\r\n```java\r\nprivate void handleLaunchActivity(ActivityClientRecord r, Intent customIntent, String reason) {\r\n        // If we are getting ready to gc after going to the background, well\r\n        // we are back active so skip it.\r\n        unscheduleGcIdler();\r\n        mSomeActivitiesChanged = true;\r\n\r\n        if (r.profilerInfo != null) {\r\n            mProfiler.setProfiler(r.profilerInfo);\r\n            mProfiler.startProfiling();\r\n        }\r\n\r\n        // Make sure we are running with the most recent config.\r\n        handleConfigurationChanged(null, null);\r\n\r\n        if (localLOGV) Slog.v(\r\n            TAG, \"Handling launch of \" + r);\r\n\r\n        // Initialize before creating the activity\r\n        WindowManagerGlobal.initialize();\r\n\r\n        Activity a = performLaunchActivity(r, customIntent);\r\n        ........\u7701\u7565\u5176\u4ed6\u4ee3\u7801\r\n}\r\n```\r\n##### performLaunchActivity(r, customIntent);\r\n```java\r\nprivate Activity performLaunchActivity(ActivityClientRecord r, Intent customIntent) {\r\n        // System.out.println(\"##### [\" + System.currentTimeMillis() + \"] ActivityThread.performLaunchActivity(\" + r + \")\");\r\n        ActivityInfo aInfo = r.activityInfo;\r\n        if (r.packageInfo == null) {\r\n            r.packageInfo = getPackageInfo(aInfo.applicationInfo, r.compatInfo,\r\n                    Context.CONTEXT_INCLUDE_CODE);\r\n        }\r\n        ComponentName component = r.intent.getComponent();\r\n        if (component == null) {\r\n            component = r.intent.resolveActivity(\r\n                mInitialApplication.getPackageManager());\r\n            r.intent.setComponent(component);\r\n        }\r\n\r\n        if (r.activityInfo.targetActivity != null) {\r\n            component = new ComponentName(r.activityInfo.packageName,\r\n                    r.activityInfo.targetActivity);\r\n        }\r\n        ContextImpl appContext = createBaseContextForActivity(r);\r\n        Activity activity = null;\r\n        try {\r\n        \t// \u521b\u5efa \u901a\u8fc7 mInstrumentation \u53cd\u5c04\u521b\u5efa Activity \u5bf9\u8c61\r\n            java.lang.ClassLoader cl = appContext.getClassLoader();\r\n            activity = mInstrumentation.newActivity(\r\n                    cl, component.getClassName(), r.intent);\r\n            StrictMode.incrementExpectedActivityCount(activity.getClass());\r\n            r.intent.setExtrasClassLoader(cl);\r\n            r.intent.prepareToEnterProcess();\r\n            if (r.state != null) {\r\n                r.state.setClassLoader(cl);\r\n            }\r\n        } catch (Exception e) {\r\n            if (!mInstrumentation.onException(activity, e)) {\r\n                throw new RuntimeException(\r\n                    \"Unable to instantiate activity \" + component\r\n                    + \": \" + e.toString(), e);\r\n            }\r\n        }\r\n\r\n        try {\r\n        \t// \u521b\u5efa Application\u7684\u5b9e\u4f8b\r\n            Application app = r.packageInfo.makeApplication(false, mInstrumentation);\r\n\r\n            if (localLOGV) Slog.v(TAG, \"Performing launch of \" + r);\r\n            if (localLOGV) Slog.v(\r\n                    TAG, r + \": app=\" + app\r\n                    + \", appName=\" + app.getPackageName()\r\n                    + \", pkg=\" + r.packageInfo.getPackageName()\r\n                    + \", comp=\" + r.intent.getComponent().toShortString()\r\n                    + \", dir=\" + r.packageInfo.getAppDir());\r\n\r\n            if (activity != null) {\r\n                CharSequence title = r.activityInfo.loadLabel(appContext.getPackageManager());\r\n                Configuration config = new Configuration(mCompatConfiguration);\r\n                if (r.overrideConfig != null) {\r\n                    config.updateFrom(r.overrideConfig);\r\n                }\r\n                if (DEBUG_CONFIGURATION) Slog.v(TAG, \"Launching activity \"\r\n                        + r.activityInfo.name + \" with config \" + config);\r\n                Window window = null;\r\n                if (r.mPendingRemoveWindow != null && r.mPreserveWindow) {\r\n                    window = r.mPendingRemoveWindow;\r\n                    r.mPendingRemoveWindow = null;\r\n                    r.mPendingRemoveWindowManager = null;\r\n                }\r\n                appContext.setOuterContext(activity);\r\n                activity.attach(appContext, this, getInstrumentation(), r.token,\r\n                        r.ident, app, r.intent, r.activityInfo, title, r.parent,\r\n                        r.embeddedID, r.lastNonConfigurationInstances, config,\r\n                        r.referrer, r.voiceInteractor, window, r.configCallback);\r\n\r\n                if (customIntent != null) {\r\n                    activity.mIntent = customIntent;\r\n                }\r\n                r.lastNonConfigurationInstances = null;\r\n                checkAndBlockForNetworkAccess();\r\n                activity.mStartedActivity = false;\r\n                int theme = r.activityInfo.getThemeResource();\r\n                if (theme != 0) {\r\n                    activity.setTheme(theme);\r\n                }\r\n\t\t\t\t// \u8c03\u7528Activity \u7684 onCreate\u65b9\u6cd5\r\n                activity.mCalled = false;\r\n                if (r.isPersistable()) {\r\n                    mInstrumentation.callActivityOnCreate(activity, r.state, r.persistentState);\r\n                } else {\r\n                    mInstrumentation.callActivityOnCreate(activity, r.state);\r\n                }\r\n                // \u6211\u4eec\u5728 Activity \u7684\u58f0\u660e\u5468\u671f\u65b9\u6cd5\u4e2d\u5fc5\u987b\u8981\u8c03\u7528\u7236\u7c7b\u7684\uff0c\u4e0d\u8c03\u7528\u5c31\u4f1a\u629b\u5f02\u5e38\uff0c \u5224\u65ad\u7684\u6e90\u7801\u5c31\u662f\u5728\u8fd9\u91cc\r\n                if (!activity.mCalled) {\r\n                    throw new SuperNotCalledException(\r\n                        \"Activity \" + r.intent.getComponent().toShortString() +\r\n                        \" did not call through to super.onCreate()\");\r\n                }\r\n                r.activity = activity;\r\n                r.stopped = true;\r\n                if (!r.activity.mFinished) {\r\n                    activity.performStart();\r\n                    r.stopped = false;\r\n                }\r\n                if (!r.activity.mFinished) {\r\n                    if (r.isPersistable()) {\r\n                        if (r.state != null || r.persistentState != null) {\r\n                            mInstrumentation.callActivityOnRestoreInstanceState(activity, r.state,\r\n                                    r.persistentState);\r\n                        }\r\n                    } else if (r.state != null) {\r\n                        mInstrumentation.callActivityOnRestoreInstanceState(activity, r.state);\r\n                    }\r\n                }\r\n                if (!r.activity.mFinished) {\r\n                    activity.mCalled = false;\r\n                    if (r.isPersistable()) {\r\n                        mInstrumentation.callActivityOnPostCreate(activity, r.state,\r\n                                r.persistentState);\r\n                    } else {\r\n                        mInstrumentation.callActivityOnPostCreate(activity, r.state);\r\n                    }\r\n                    if (!activity.mCalled) {\r\n                        throw new SuperNotCalledException(\r\n                            \"Activity \" + r.intent.getComponent().toShortString() +\r\n                            \" did not call through to super.onPostCreate()\");\r\n                    }\r\n                }\r\n            }\r\n            r.paused = true;\r\n\r\n            mActivities.put(r.token, r);\r\n\r\n        } catch (SuperNotCalledException e) {\r\n            throw e;\r\n\r\n        } catch (Exception e) {\r\n            if (!mInstrumentation.onException(activity, e)) {\r\n                throw new RuntimeException(\r\n                    \"Unable to start activity \" + component\r\n                    + \": \" + e.toString(), e);\r\n            }\r\n        }\r\n\r\n        return activity;\r\n    }\r\n```\r\n***\u5230\u6b64Activity\u7684\u542f\u52a8\u6d41\u7a0b\u5206\u6790\u5b8c\u6bd5\uff0c\u7ecf\u8fc7\u6e90\u7801\u5206\u6790\u6211\u4eec\u4e0d\u5f97\u4e0d\u611f\u53f9\u6e90\u7801\u7684\u590d\u6742\uff0c\u901a\u8fc7\u524d\u9762\u90a3\u4e48\u591a\u6b65\u51c6\u5907\u5de5\u4f5c\uff0c\u624d\u521b\u5efa\u4e86Activity\u7684\u5bf9\u8c61***\r\n\r\n##### \u901a\u8fc7\u4e0a\u9762\u7684\u5206\u6790\uff0c\u6211\u4eec\u77e5\u9053\u4e86Activity \u662f\u600e\u4e48\u88ab\u521b\u5efa\u548c\u542f\u52a8\u7684\uff0c\u6211\u4eec\u8fdb\u5165\u4e0b\u4e00\u4e2a\u8bdd\u9898\r\n### \u542f\u52a8\u4e00\u4e2a \u672a\u5b89\u88c5apk\u4e2d\u7684Activity\r\n\u601d\u8def\uff1a\r\n- \u6211\u4eec\u77e5\u9053\u8981\u60f3\u6253\u5f00\u4e00\u4e2aActivity\u5fc5\u987b\u5728 manifest\u4e2d\u58f0\u660e\uff0c\u4f46\u662f\u63d2\u4ef6\u4e2d\u7684Activity\u80af\u5b9a\u662f\u6ca1\u6709\u5728\u6211\u4eec\u7684 manifest\u4e2d\u58f0\u660e\u7684\uff0c\u6211\u4eec\u600e\u4e48\u505a\u5230\u4e86\uff1f \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u5360\u5751 \u7684\u601d\u60f3\u6765\u5b9e\u73b0\u8fd9\u4e2a\r\n- \u4ec0\u4e48\u662f\u5360\u5751\u5462\uff1f  \u5360\u5751\u5c31\u662f\u5728\u6211\u4eec app \u7684 manifest\u4e2d\u6ce8\u518c\u4e00\u4e2aActivity,\u6b3a\u9a97\u7cfb\u7edf\u901a\u8fc7\u7cfb\u7edf\u7cfb\u7edf\u7684\u6548\u9a8c\uff0c\u5f53\u521b\u5efaActivity\u5b9e\u4f8b\u65f6\u66ff\u6362\u6210\u63d2\u4ef6\u4e2d\u7684Activity \u8fbe\u5230\u542f\u52a8\u63d2\u4ef6Activity\u7684\u76ee\u7684\r\n\r\n##### \u5b9e\u73b0\u6d41\u7a0b\r\n\u6211\u4eec\u901a\u8fc7\u5206\u6790\u77e5\u9053\u4e86Activity\u5728\u521b\u5efa\u7684\u65f6\u5019 \u662f\u901a\u8fc7 mInstrumentation.newActivity \u6765\u521b\u5efaActivity\u5b9e\u4f8b\u7684,\r\n\u6211\u4eec\u53ef\u4ee5 hook ActivityThread \u4e2d\u7684 mInstrumentation \u5b57\u6bb5 \u66ff\u6362\u6210\u6211\u4eec\u7684\u4ee3\u7406\u5bf9\u8c61\r\n```java\r\n //\u83b7\u53d6 ActivityThread \u7684\u5b9e\u4f8b\u5bf9\u8c61\r\n    Object currentActivityThread =\r\n        Reflect.tryReadField(Reflect.tryGetClass(ACTIVITY_THREAD_CLASS_NAME),\r\n            \"sCurrentActivityThread\");\r\n    // \u83b7\u53d6ActivityThread \u4e2d\u7684 mInstrumentation\u53d8\u91cf,\u5e76\u4fee\u6539\u4e3a\u4ee3\u7406\u5bf9\u8c61\r\n    Instrumentation instrumentation =\r\n        Reflect.tryReadField(currentActivityThread, \"mInstrumentation\");\r\n    Reflect.tryWriteField(currentActivityThread, \"mInstrumentation\",\r\n        new PluginInstrumentation(instrumentation));\r\n```\r\n\u66ff\u6362\u4e86 mInstrumentation \u4e4b\u540e\u6211\u4eec\u8fd8\u9700\u66ff\u6362 ClassLoader \u56e0\u4e3a\u9ed8\u8ba4\u7684classloader \u4e2d\u662f\u6ca1\u6709\u63d2\u4ef6 app\u4e2d\u7684 \u7c7b\u7684\uff0c\r\nActivityThread \u4e2d\u6709\u4e00\u4e2a \u5b58\u50a8\u5305\u4fe1\u606f\u7684 ArrayMap  key \u662f\u5305\u540d\uff0c\u503c\u662f \u5305\u4fe1\u606f\r\n```java\r\n//\u83b7\u53d6 ActivityThread \u4e2d\u7684 apk\u5305\u4fe1\u606f\r\n    ArrayMap<String, WeakReference<?>> mPackages =\r\n        Reflect.tryReadField(currentActivityThread, \"mPackages\");\r\n    // \u83b7\u53d6\u5230 LoadedApk\r\n    Object loadedApk = mPackages.get(context.getPackageName()).get();\r\n    // \u83b7\u53d6 LoadedApk \u4e2d\u7684classloader\r\n    ClassLoader classLoader = Reflect.tryReadField(loadedApk, \"mClassLoader\");\r\n    dynamicClassLoader =\r\n        new PluginClassLoader(\"\", context.getExternalCacheDir().getAbsolutePath(), \"\", classLoader);\r\n    Reflect.tryWriteField(loadedApk, \"mClassLoader\", dynamicClassLoader);\r\n```\r\n###### \u4ee3\u7406ClassLoader\r\n```java\r\npublic class PluginClassLoader extends DexClassLoader {\r\n\r\n  private ClassLoader classLoader;\r\n\r\n  public PluginClassLoader(String dexPath, String optimizedDirectory, String librarySearchPath,\r\n      ClassLoader parent) {\r\n    super(dexPath, optimizedDirectory, librarySearchPath, parent);\r\n  }\r\n  /**\r\n   * \u67e5\u627e\u7c7b\r\n   */\r\n  public Class findClass(String pluginName, String className) throws ClassNotFoundException {\r\n  \t// \u83b7\u53d6\u7684\u662f\u63d2\u4ef6\u7684ClassLoader\uff0c\u63d2\u4ef6\u5728\u5b89\u88c5\u65f6\u4f1a\u521b\u5efa \u4e00\u4e2aClassLoader \u4f18\u5148\u63d2\u4ef6\u7684ClassLoader\u52a0\u8f7d\u7c7b\uff0c\u63d2\u4ef6\u65e0\u6cd5\u52a0\u8f7d\u65f6\uff0c\u7528\u5bbf\u4e3b\u7684ClassLoader \u52a0\u8f7d\r\n    classLoader = PluginManager.get().getClassLoader(pluginName);\r\n    if (classLoader == null) return loadClass(className);\r\n    Class<?> aClass = classLoader.loadClass(className);\r\n    if (aClass == null) {\r\n      return loadClass(className);\r\n    }\r\n    return aClass;\r\n  }\r\n}\r\n```\r\n\r\n###### PluginInstrumentation \u7684\u5b9e\u73b0,\u5728PluginInstrumentation \u91cd\u5199\u6240\u6709\u7684 public \u65b9\u6cd5\uff0c\u8c03\u7528base\u7684\u5b9e\u73b0\r\n```java\r\npublic class PluginInstrumentation extends Instrumentation {\r\n\r\n  private final Instrumentation base;\r\n\r\n  public PluginInstrumentation(Instrumentation base) {\r\n    this.base = base;\r\n  }\r\n  @Override public void callActivityOnStart(Activity activity) {\r\n    base.callActivityOnStart(activity);\r\n  }\r\n\r\n  @Override public void onCreate(Bundle arguments) {\r\n    base.onCreate(arguments);\r\n  }\r\n  // \u6211\u4eec\u77e5\u9053 Activity \u521b\u5efa\u65f6\u4f1a\u8c03\u7528\u6b64\u65b9\u6cd5\r\n  @Override public Activity newActivity(ClassLoader cl, String className, Intent intent)\r\n      throws InstantiationException, IllegalAccessException, ClassNotFoundException {\r\n    if(intent.hasExtra(PluginManager.EXTRA_TARGET_ACTIVITY)) {\r\n      className = intent.getStringExtra(PluginManager.EXTRA_TARGET_ACTIVITY);\r\n      String packageName = intent.getStringExtra(PluginManager.EXTRA_TARGET_PLUGIN_NAME);\r\n      intent.setExtrasClassLoader(PluginManager.get()\r\n          .getDynamicClassLoader());\r\n       // \u8c03\u7528 \u81ea\u5b9a\u4e49 ClassLoader\u4e2d\u7684 findClass \u65b9\u6cd5\u521b\u5efa Activity \u5bf9\u8c61\r\n      return (Activity) PluginManager.get()\r\n          .getDynamicClassLoader()\r\n          .findClass(packageName, className)\r\n          .newInstance();\r\n    }\r\n    return base.newActivity(cl, className, intent);\r\n  }\r\n  ......\u7701\u7565\u5176\u4ed6\u4ee3\u7801\r\n```\r\n\r\n###### \u5b89\u88c5\u63d2\u4ef6\r\n```java\r\n public void install(String pluginName, String apkPath) {\r\n \t// \u4e3a\u6bcf\u4e00\u4e2a\u63d2\u4ef6\u521b\u5efa ClassLoader\r\n    DexClassLoader dexClassLoader =\r\n        new DexClassLoader(apkPath, context.getExternalCacheDir().getAbsolutePath(), null,\r\n            dynamicClassLoader);\r\n    PackageManager pm = context.getPackageManager();\r\n    // \u83b7\u53d6 \u63d2\u4ef6\u5305\u4fe1\u606f\r\n    PackageInfo packageArchiveInfo = pm.getPackageArchiveInfo(apkPath, PackageManager.GET_ACTIVITIES\r\n        | PackageManager.GET_SERVICES\r\n        | PackageManager.GET_PROVIDERS\r\n        | PackageManager.GET_RECEIVERS\r\n        | PackageManager.GET_META_DATA);\r\n    try {\r\n     // \u8bbe\u7f6e \u8d44\u6e90\u8def\u5f84 \u4e3a apk\u5730\u5740\r\n      packageArchiveInfo.applicationInfo.publicSourceDir = apkPath;\r\n      packageArchiveInfo.applicationInfo.sourceDir = apkPath;\r\n      // \u83b7\u53d6Resources \u5bf9\u8c61\r\n      Resources resources = pm.getResourcesForApplication(packageArchiveInfo.applicationInfo);\r\n      pluginMaps.put(pluginName, new PluginInfo(dexClassLoader, resources));\r\n    } catch (PackageManager.NameNotFoundException e) {\r\n      e.printStackTrace();\r\n    }\r\n```\r\n###### \u57fa\u7840Activity \u7684\u5c01\u88c5\r\n```java\r\npublic class ProxyActivity extends AppCompatActivity {\r\n\r\n  @Override\r\n  public void startActivityForResult(Intent intent, int requestCode, @Nullable Bundle options) {\r\n    ComponentName component = intent.getComponent();\r\n    intent.putExtra(PluginManager.EXTRA_TARGET_ACTIVITY, component.getClassName());\r\n    intent.putExtra(PluginManager.EXTRA_TARGET_PLUGIN_NAME, component.getPackageName());\r\n    // \u8fd9\u91cc\u542f\u52a8 \u4ee3\u7406\u7684 Activity\uff0c\u7cfb\u7edf\u6548\u9a8c\u5b8c\u6210\u4e4b\u540e\u5728\u66ff\u6362\u6210\u6211\u4eec\u771f\u5b9e\u9700\u8981\u542f\u52a8\u7684Activity\r\n    intent.setComponent(\r\n        new ComponentName(getPackageName(), ProxyActivity.class.getCanonicalName()));\r\n    super.startActivityForResult(intent, requestCode, options);\r\n  }\r\n}\r\n```\r\n###### MainActivity\r\n```java\r\npublic class MainActivity extends ProxyActivity {\r\n\r\n  @Override protected void onCreate(Bundle savedInstanceState) {\r\n    super.onCreate(savedInstanceState);\r\n    setContentView(R.layout.activity_main);\r\n  }\r\n\r\n  public void test(View view) {\r\n    Intent intent = new Intent();\r\n    // \u542f\u52a8\u4e00\u4e2a\u63d2\u4ef6Activity\r\n    intent.setComponent(new ComponentName(\"app\", \"com.liwg.src.mybasiclib.MainActivity\"));\r\n    startActivity(intent);\r\n  }\r\n}\r\n```\r\n##### \u6211\u4eec\u6765\u770b\u63d2\u4ef6\u7684\u4ee3\u7801\r\n###### \u63d2\u4ef6 \u7684base Activity\r\n```java\r\npublic class PluginBaseActivity extends AppCompatActivity {\r\n  Resources resources;\r\n  // \u901a\u8fc7\u5bbf\u4e3b\u83b7\u53d6\u63d2\u4ef6\u5bf9\u5e94\u7684 resources\u5bf9\u8c61\r\n  private Resources loadResources() {\r\n    if (resources != null) return resources;\r\n    Object pluginManager =\r\n        Reflect.tryInvokeMethod(\"com.liwg.src.dynamicandroid.PluginManager\", \"get\");\r\n    resources = (Resources) Reflect.tryInvokeMethod(pluginManager, \"getResources\", \"app\");\r\n    return resources;\r\n  }\r\n\r\n  // \u63d2\u4ef6\u7684 Resources\r\n  public Resources getPluginResources() {\r\n    return resources;\r\n  }\r\n  // \u91cd\u5199 LayoutInflater \u670d\u52a1,\u66ff\u6362Resources\r\n  @Override public Object getSystemService(String name) {\r\n    if (Context.LAYOUT_INFLATER_SERVICE.equals(name)) {\r\n      LayoutInflater layoutInflater = (LayoutInflater) super.getSystemService(name);\r\n      return layoutInflater\r\n          .cloneInContext(new ContextWrapper(getBaseContext()) {\r\n            @Override public Resources getResources() {\r\n              return loadResources();\r\n            }\r\n          });\r\n    }\r\n    return super.getSystemService(name);\r\n  }\r\n}\r\n```\r\n###### \u63d2\u4ef6\u4e2d\u7684Activity\r\n```java\r\npublic class MainActivity extends PluginBaseActivity {\r\n  @Override protected void onCreate(Bundle savedInstanceState) {\r\n    super.onCreate(savedInstanceState);\r\n    setContentView(R.layout.activity_main);\r\n    findViewById(R.id.tv).setOnClickListener(new View.OnClickListener() {\r\n      @Override public void onClick(View v) {\r\n        new Toastor(getApplicationContext()).showLongToast(\"\u8fd9\u662f\u63d2\u4ef6\uff1a\" + getPluginResources().getString(R.string.plugin_name));\r\n      }\r\n    });\r\n  }\r\n}\r\n```\r\n### \u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86 \u542f\u52a8\u4e00\u4e2a\u672a\u5b89\u88c5 apk\u4e2d\u7684Activity\r\n![Activity-plugin.gif](https://upload-images.jianshu.io/upload_images/2194180-abb3b1f0a8a085e2.gif?imageMogr2/auto-orient/strip)\r\n\r\n[https://github.com/lwugang/DynamicAndroid](https://github.com/lwugang/DynamicAndroid)\r\n\r\n### \u603b\u7ed3\r\n- ##### \u8fd9\u4e2a\u6848\u4f8b\u4e3b\u8981\u662f\u7528\u4e8e\u5b66\u4e60,\u5f00\u53d1\u4e2d\u80af\u5b9a\u662f\u4e0d\u80fd\u8fd9\u4e48\u7528\u7684\uff0c\u5f88\u591a\u7ec6\u8282\u90fd\u672a\u5904\u7406\r\n- ##### \u63d2\u4ef6\u4e2d\u5fc5\u987b\u8981\u7528 getPluginResources() \u83b7\u53d6\u8d44\u6e90\uff0c\u5982\u679c\u76f4\u63a5\u91cd\u5199 Activity\u4e2d\u7684 getResources \u65b9\u6cd5\u4f1a\u51fa\u73b0\u627e\u4e0d\u5230v7\u4e3b\u9898\u7684\u95ee\u9898\uff0c\u6682\u65f6\u6ca1\u60f3\u5230\u89e3\u51b3\u529e\u6cd5  (\u5728\u8fd9\u8bf7\u6559\u5404\u4f4d)", "created_time": "2019-11-04T02:19:00Z", "modified_time": "2019-11-04T02:20:55.605Z", "excerpt": "\u901a\u8fc7\u5206\u6790Activity\u7684\u542f\u52a8\u6d41\u7a0b\uff0c\u63a2\u7d22Android\u7684\u63d2\u4ef6\u5316\uff0c\u4e0b\u9762\u901a\u8fc7\u6e90\u7801\u5206\u6790\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u63d2\u4ef6\u5316\u6253\u5f00\u4e00\u4e2a \u672a\u5b89\u88c5apk\u4e2d\u7684Activity \u5f00\u59cb\u5206\u6790Activity\u7684\u542f\u52a8\u6d41\u7a0b\u4ece startActivity\u5f00\u59cb```java// Activity.javapublic", "views": 216, "words": 25024, "category": 1, "author": 1, "status": "p", "stick": "n", "tag": [2]}}, {"model": "blog.post", "pk": 5, "fields": {"title": "Gradle\u63d2\u4ef6\u5f00\u53d1-EventBus\u81ea\u52a8\u6ce8\u518c", "body": "# com.eventbus.autoregister\r\n### EventBus\u81ea\u52a8\u6ce8\u518c\u4e0e\u53cd\u6ce8\u518c\r\n- ##### \u652f\u6301\u5728Activity onCreate\u65b9\u6cd5\u8fdb\u884c\u6ce8\u518c\uff0c\u5728onDestroy\u65b9\u6cd5\u4e2d\u53cd\u6ce8\u518c\r\n- ##### \u652f\u6301\u5728Fragment onCreate\u65b9\u6cd5\u8fdb\u884c\u6ce8\u518c\uff0c\u5728onDestroy\u65b9\u6cd5\u4e2d\u53cd\u6ce8\u518c\r\n- ##### \u652f\u6301\u5728View onAttachedToWindow\u65b9\u6cd5\u8fdb\u884c\u6ce8\u518c\uff0c\u5728onDetachedFromWindow\u65b9\u6cd5\u4e2d\u53cd\u6ce8\u518c\r\n\r\n### gradle \u4f9d\u8d56\u914d\u7f6e\r\n```gradle\r\nbuildscript {\r\n    repositories {\r\n        maven {\r\n            url \"https://plugins.gradle.org/m2/\"\r\n        }\r\n    }\r\n    dependencies {\r\n        classpath \"gradle.plugin.com.liwg.eventbus.autoregister:autoRegisterPlugin:1.0.0\"\r\n    }\r\n}\r\n\r\napply plugin: \"com.eventbus.autoregister\"\r\n```\r\n### \u4f7f\u7528\u65b9\u5f0f\u548c\u5e73\u5e38\u4f7f\u7528\u6ca1\u6709\u4efb\u4f55\u533a\u522b\r\n    \u7701\u53bb\u4e86\u624b\u52a8\u6ce8\u518c\u4e0e\u53cd\u6ce8\u518c\u4ee3\u7801\r\n```java\r\npublic class MainActivity extends AppCompatActivity {\r\n    @Subscribe\r\n    public void onEvent(Object object){\r\n\r\n    }\r\n}\r\n```\r\n### \u8fd9\u662f\u7f16\u8bd1\u81ea\u52a8\u751f\u6210\u7684\u4ee3\u7801\r\n```java\r\npublic class MainActivity extends AppCompatActivity {\r\n    public MainActivity() {\r\n    }\r\n\r\n    @Subscribe\r\n    public void onEvent(Object object) {\r\n    }\r\n\r\n    public void onCreate(Bundle var1) {\r\n        super.onCreate(var1);\r\n        //\u81ea\u52a8\u5728Activity\u7684onCreate\u4e2d\u751f\u6210\u6ce8\u518c\u4ee3\u7801\r\n        if (!EventBus.getDefault().isRegistered(this)) {\r\n            EventBus.getDefault().register(this);\r\n        }\r\n\r\n    }\r\n\r\n    public void onDestroy() {\r\n        super.onDestroy();\r\n        //\u81ea\u52a8\u5728Activity\u7684onDestroy\u4e2d\u751f\u6210\u53cd\u6ce8\u518c\u4ee3\u7801\r\n        if (EventBus.getDefault().isRegistered(this)) {\r\n            EventBus.getDefault().unregister(this);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n##### [\u4ed3\u5e93\u5730\u5740 https://github.com/lwugang/EventBusAutoRegister](https://github.com/lwugang/EventBusAutoRegister)", "created_time": "2019-11-04T02:29:00Z", "modified_time": "2019-11-04T02:29:36.914Z", "excerpt": " com.eventbus.autoregister\r\n EventBus\u81ea\u52a8\u6ce8\u518c\u4e0e\u53cd\u6ce8\u518c\r\n-  \u652f\u6301\u5728Activity onCreate\u65b9\u6cd5\u8fdb\u884c\u6ce8\u518c\uff0c\u5728onDestroy\u65b9\u6cd5\u4e2d\u53cd\u6ce8\u518c\r\n-  \u652f\u6301\u5728Fragment onCreate\u65b9\u6cd5\u8fdb\u884c\u6ce8\u518c\uff0c\u5728onDestroy\u65b9\u6cd5\u4e2d\u53cd\u6ce8\u518c\r\n-  \u652f\u6301\u5728V", "views": 39, "words": 1194, "category": 1, "author": 1, "status": "p", "stick": "n", "tag": [2]}}, {"model": "blog.post", "pk": 6, "fields": {"title": "Gradle\u63d2\u4ef6\u5f00\u53d1\u5165\u95e8", "body": "### 1\u3001\u4f7f\u7528AndroidStudio\u521b\u5efa\u4e00\u4e2a\u666e\u901a\u7684java Module\r\n### 2\u3001\u4fee\u6539build.gradle\u6587\u4ef6\uff0c\u66ff\u6362\u6210\u4e0b\u9762\u7684\u5185\u5bb9\r\n```groovy\r\napply plugin: 'groovy'\r\napply plugin: 'maven'\r\n\r\ndependencies {\r\n    //gradle sdk\r\n    compile gradleApi()\r\n    //groovy sdk\r\n    compile localGroovy()\r\n    compile 'com.android.tools.build:gradle:2.3.0'\r\n    compile 'org.javassist:javassist:3.25.0-GA'\r\n}\r\n\r\n/**\u5b9a\u4e49\u5de5\u4ef6\u7684group\u3001name \u548c version*/\r\ngroup = 'com.liwg.eventbus.autoregister'\r\narchivesBaseName = 'eventbus-autoregister'\r\nversion = '1.0.0'\r\n\r\nuploadArchives{ //\u5f53\u524d\u9879\u76ee\u53ef\u4ee5\u53d1\u5e03\u5230\u672c\u5730\u6587\u4ef6\u5939\u4e2d\r\n    repositories {\r\n        mavenDeployer {\r\n            repository(url: uri('../repo')) //\u5b9a\u4e49\u672c\u5730maven\u4ed3\u5e93\u7684\u5730\u5740\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n### 3\u3001\u4fee\u6539src/main/java\u7684\u76ee\u5f55\u540d\u6539\u6210src/main/groovy\r\n### 4\u3001\u5728groovy\u65b0\u5efa\u81ea\u5df1\u7684\u5305\u76ee\u5f55\uff0c\u5e76\u65b0\u5efa\u4e00\u4e2agroovy \u7c7b,\u8fd9\u4e2a\u7c7b\u5c31\u662f\u63d2\u4ef6\u7684\u5165\u53e3\u7c7b\r\n```groovy\r\npackage com.liwg.plugin.autoregister\r\n\r\nimport org.gradle.api.Plugin\r\nimport org.gradle.api.Project\r\n\r\nclass AutoRegisterPlugin implements Plugin<Project> {\r\n\r\n    @Override\r\n    void apply(Project project) {\r\n        println(\"\u63d2\u4ef6\u6267\u884c\u4e86\")\r\n    }\r\n}\r\n```\r\n### 5\u3001\u65b0\u5efa\u63d2\u4ef6\u914d\u7f6e\u6587\u4ef6 /src/main/resources/META-INF/gradle-plugins/com.eventbus.autoregister.properties,\u6587\u4ef6\u540d\u5c31\u662f\u63d2\u4ef6\u540d\uff0c\u5f15\u7528\u63d2\u4ef6\u65f6\u4f7f\u7528apply plugin: \"com.eventbus.autoregister\"\r\n    //\u6587\u4ef6\u5185\u5bb9,\u7c7b\u540d\u6539\u6210\u81ea\u5df1\u7684\u7c7b\u540d\r\n    implementation-class=com.liwg.plugin.autoregister.AutoRegisterPlugin\r\n    \r\n### 6\u3001\u6267\u884cuploadArchives\u8fd9\u4e2agradle\u4efb\u52a1\u4f1a\u5728 \u9879\u76ee\u6839\u76ee\u5f55\u7684repo\u6587\u4ef6\u5939\u751f\u6210\u4e00\u4e2a\u672c\u5730maven\u4ed3\u5e93\r\n\r\n### 7\u3001\u5728\u9879\u76ee\u7684gradle\u6587\u4ef6\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\r\n```gradle\r\nbuildscript {\r\n    \r\n    repositories {\r\n        // \u8bbe\u7f6emaven\u4e3a\u672c\u5730\u4ed3\u5e93\r\n        maven {\r\n            url \"./repo\"\r\n        }\r\n        google()\r\n        jcenter()\r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:3.2.0'\r\n        // \u5f15\u7528\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u7684\u63d2\u4ef6\r\n        classpath 'com.liwg.eventbus.autoregister:eventbus-autoregister:1.0.0'\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        // \u8bbe\u7f6emaven\u4e3a\u672c\u5730\u4ed3\u5e93\r\n        maven {\r\n            url \"./repo\"\r\n        }\r\n        google()\r\n        jcenter()\r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}\r\n\r\n```\r\n### 8\u3001\u5728 app\u76ee\u5f55\u4e0b\u7684gradle\u6587\u4ef6\u505a\u5982\u4e0b\u5f15\u7528\r\n```gradle\r\napply plugin: 'com.android.application'\r\n// \u5f15\u7528\u63d2\u4ef6\uff0c\u5f53\u6211\u4eec\u5728\u8fd0\u884c\u6216\u8005\u6784\u5efa\u65f6\u5c31\u4f1a\u6267\u884c\u5230\u6211\u4eec\u7684\u63d2\u4ef6\u4ee3\u7801\r\napply plugin: \"com.eventbus.autoregister\"\r\n\r\nandroid {\r\n    compileSdkVersion 28\r\n    defaultConfig {\r\n        applicationId \"com.liwg.eventbus.autoregister\"\r\n        minSdkVersion 15\r\n        targetSdkVersion 28\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\r\n    }\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n}\r\n\r\n```\r\n\r\n### \u6587\u7ae0\u4ecb\u7ecd\u7684\u53ea\u662f\u7b80\u5355\u521b\u5efa\u4e00\u4e2a\u63d2\u4ef6\u5de5\u7a0b\uff0c\u66f4\u591a\u6838\u5fc3\u529f\u80fd\u4e3b\u8981\u662f\u5b66\u4e60\u901a\u8fc7transform\u914d\u5408javassist\u64cd\u4f5c\u5b57\u8282\u7801\u52a8\u6001\u6ce8\u5165\u4ee3\u7801\uff0c\u8fd9\u90e8\u5206\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003\u6211\u53e6\u4e00\u504f\u535a\u5ba2\r\n[EventBus\u81ea\u52a8\u6ce8\u518c\u4e0e\u53cd\u6ce8\u518c](/post/5)", "created_time": "2019-11-04T02:29:00Z", "modified_time": "2019-11-04T02:30:55.869Z", "excerpt": " 1\u3001\u4f7f\u7528AndroidStudio\u521b\u5efa\u4e00\u4e2a\u666e\u901a\u7684java Module\r\n 2\u3001\u4fee\u6539build.gradle\u6587\u4ef6\uff0c\u66ff\u6362\u6210\u4e0b\u9762\u7684\u5185\u5bb9\r\n```groovy\r\napply plugin: 'groovy'\r\napply plugin: 'maven'\r\n\r\ndependencies {\r\n    //", "views": 1, "words": 2237, "category": 1, "author": 1, "status": "p", "stick": "n", "tag": [2]}}, {"model": "blog.messages", "pk": 1, "fields": {"name": "\u4f60\u597d", "admin": 1}}]